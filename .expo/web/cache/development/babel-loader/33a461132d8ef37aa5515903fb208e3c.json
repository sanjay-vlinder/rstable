{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"F:\\\\react learn\\\\widgets\\\\rstable\\\\src\\\\tb.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Checkbox, Divider, Dropdown, Icon, IconButton, Popover, Table, Whisper } from 'rsuite';\nimport 'rsuite/dist/styles/rsuite-default.css';\nimport config from \"./components/config/blueprint.json\";\nvar Column = Table.Column,\n    HeaderCell = Table.HeaderCell,\n    Cell = Table.Cell,\n    Pagination = Table.Pagination;\nvar bp = config.data;\n\nvar NameCell = function NameCell(_ref) {\n  var rowData = _ref.rowData,\n      dataKey = _ref.dataKey,\n      props = _objectWithoutProperties(_ref, [\"rowData\", \"dataKey\"]);\n\n  var speaker = React.createElement(Popover, {\n    title: \"Description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, \"Name:\"), \" \", rowData.firstName + \" \" + rowData.lastName, ' '), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, \"Email:\"), \" \", rowData.email, ' '), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"Company:\"), \" \", rowData.companyName, ' '), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \"Sentence:\"), \" \", rowData.sentence, ' '));\n  return React.createElement(Cell, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }), React.createElement(Whisper, {\n    placement: \"top\",\n    speaker: speaker,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, React.createElement(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, rowData[dataKey].toLocaleString())));\n};\n\nvar ImageCell = function ImageCell(_ref2) {\n  var rowData = _ref2.rowData,\n      dataKey = _ref2.dataKey,\n      props = _objectWithoutProperties(_ref2, [\"rowData\", \"dataKey\"]);\n\n  return React.createElement(Cell, _extends({}, props, {\n    style: {\n      padding: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }\n  }), React.createElement(\"div\", {\n    style: {\n      width: 40,\n      height: 40,\n      background: '#f5f5f5',\n      borderRadius: 20,\n      marginTop: 2,\n      overflow: 'hidden',\n      display: 'inline-block'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, React.createElement(\"img\", {\n    src: rowData[dataKey],\n    width: \"44\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  })));\n};\n\nvar CheckCell = function CheckCell(_ref3) {\n  var rowData = _ref3.rowData,\n      onChange = _ref3.onChange,\n      checkedKeys = _ref3.checkedKeys,\n      dataKey = _ref3.dataKey,\n      props = _objectWithoutProperties(_ref3, [\"rowData\", \"onChange\", \"checkedKeys\", \"dataKey\"]);\n\n  return React.createElement(Cell, _extends({}, props, {\n    style: {\n      padding: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 3\n    }\n  }), React.createElement(\"div\", {\n    style: {\n      lineHeight: '46px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, React.createElement(Checkbox, {\n    value: rowData[dataKey],\n    inline: true,\n    onChange: onChange,\n    checked: checkedKeys.some(function (item) {\n      return item === rowData[dataKey];\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  })));\n};\n\nvar Menu = function Menu(_ref4) {\n  var onSelect = _ref4.onSelect;\n  return React.createElement(Dropdown.Menu, {\n    onSelect: onSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }\n  }, React.createElement(Dropdown.Item, {\n    eventKey: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, \"Download As...\"), React.createElement(Dropdown.Item, {\n    eventKey: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, \"Export PDF\"), React.createElement(Dropdown.Item, {\n    eventKey: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, \"Export HTML\"), React.createElement(Dropdown.Item, {\n    eventKey: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, \"Settings\"), React.createElement(Dropdown.Item, {\n    eventKey: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, \"About\"));\n};\n\nvar MenuPopover = function MenuPopover(_ref5) {\n  var onSelect = _ref5.onSelect,\n      rest = _objectWithoutProperties(_ref5, [\"onSelect\"]);\n\n  return React.createElement(Popover, _extends({}, rest, {\n    full: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 3\n    }\n  }), React.createElement(Menu, {\n    onSelect: onSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar tableBody;\n\nvar CustomWhisper = function (_React$Component) {\n  _inherits(CustomWhisper, _React$Component);\n\n  var _super = _createSuper(CustomWhisper);\n\n  function CustomWhisper(props) {\n    var _this;\n\n    _classCallCheck(this, CustomWhisper);\n\n    _this = _super.call(this, props);\n    _this.handleSelectMenu = _this.handleSelectMenu.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CustomWhisper, [{\n    key: \"handleSelectMenu\",\n    value: function handleSelectMenu(eventKey, event) {\n      console.log(eventKey);\n      this.trigger.hide();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Whisper, {\n        placement: \"autoVerticalStart\",\n        trigger: \"click\",\n        triggerRef: function triggerRef(ref) {\n          _this2.trigger = ref;\n        },\n        container: function container() {\n          return tableBody;\n        },\n        speaker: React.createElement(MenuPopover, {\n          onSelect: this.handleSelectMenu,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 18\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 7\n        }\n      }, this.props.children);\n    }\n  }]);\n\n  return CustomWhisper;\n}(React.Component);\n\nvar ActionCell = function ActionCell(_ref6) {\n  var rowData = _ref6.rowData,\n      dataKey = _ref6.dataKey,\n      props = _objectWithoutProperties(_ref6, [\"rowData\", \"dataKey\"]);\n\n  function handleAction() {\n    alert(\"id:\" + rowData[dataKey]);\n  }\n\n  return React.createElement(Cell, _extends({}, props, {\n    className: \"link-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }), React.createElement(IconButton, {\n    appearance: \"subtle\",\n    onClick: handleAction,\n    icon: React.createElement(Icon, {\n      icon: \"edit2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }), React.createElement(Divider, {\n    vertical: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }), React.createElement(CustomWhisper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, React.createElement(IconButton, {\n    appearance: \"subtle\",\n    icon: React.createElement(Icon, {\n      icon: \"more\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 47\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar data = bp.tableData.filter(function (v, i) {\n  return i < 20;\n});\n\nvar CustomColumnTable = function (_React$Component2) {\n  _inherits(CustomColumnTable, _React$Component2);\n\n  var _super2 = _createSuper(CustomColumnTable);\n\n  function CustomColumnTable(props) {\n    var _this3;\n\n    _classCallCheck(this, CustomColumnTable);\n\n    _this3 = _super2.call(this, props);\n    _this3.state = {\n      checkedKeys: [],\n      data: data\n    };\n    _this3.handleCheckAll = _this3.handleCheckAll.bind(_assertThisInitialized(_this3));\n    _this3.handleCheck = _this3.handleCheck.bind(_assertThisInitialized(_this3));\n    return _this3;\n  }\n\n  _createClass(CustomColumnTable, [{\n    key: \"handleCheckAll\",\n    value: function handleCheckAll(value, checked) {\n      var checkedKeys = checked ? data.map(function (item) {\n        return item.id;\n      }) : [];\n      this.setState({\n        checkedKeys: checkedKeys\n      });\n    }\n  }, {\n    key: \"handleCheck\",\n    value: function handleCheck(value, checked) {\n      var checkedKeys = this.state.checkedKeys;\n      var nextCheckedKeys = checked ? [].concat(_toConsumableArray(checkedKeys), [value]) : checkedKeys.filter(function (item) {\n        return item !== value;\n      });\n      this.setState({\n        checkedKeys: nextCheckedKeys\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          data = _this$state.data,\n          checkedKeys = _this$state.checkedKeys;\n      var checked = false;\n      var indeterminate = false;\n\n      if (checkedKeys.length === data.length) {\n        checked = true;\n      } else if (checkedKeys.length === 0) {\n        checked = false;\n      } else if (checkedKeys.length > 0 && checkedKeys.length < data.length) {\n        indeterminate = true;\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 7\n        }\n      }, React.createElement(Table, {\n        height: 420,\n        data: bp.tableData,\n        id: \"table\",\n        bodyRef: function bodyRef(ref) {\n          tableBody = ref;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 9\n        }\n      }, React.createElement(Column, {\n        width: 50,\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }\n      }, React.createElement(HeaderCell, {\n        style: {\n          padding: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }\n      }, React.createElement(\"div\", {\n        style: {\n          lineHeight: '40px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 15\n        }\n      }, React.createElement(Checkbox, {\n        inline: true,\n        checked: checked,\n        indeterminate: indeterminate,\n        onChange: this.handleCheckAll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 17\n        }\n      }))), React.createElement(CheckCell, {\n        dataKey: \"id\",\n        checkedKeys: checkedKeys,\n        onChange: this.handleCheck,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }\n      })), React.createElement(Column, {\n        width: 80,\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }\n      }, React.createElement(HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }\n      }, \"Avartar\"), React.createElement(ImageCell, {\n        dataKey: \"avartar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }\n      })), React.createElement(Column, {\n        width: 160,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }\n      }, React.createElement(HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }\n      }, \"First Name\"), React.createElement(NameCell, {\n        dataKey: \"firstName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }\n      })), React.createElement(Column, {\n        width: 300,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }\n      }, React.createElement(HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }\n      }, \"Email\"), React.createElement(Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }\n      }, function (rowData) {\n        return React.createElement(\"a\", {\n          href: \"mailto:\" + rowData.email,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 17\n          }\n        }, rowData.email);\n      })), React.createElement(Column, {\n        width: 200,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }\n      }, React.createElement(HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }\n      }, \"Action\"), React.createElement(ActionCell, {\n        dataKey: \"id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return CustomColumnTable;\n}(React.Component);\n\nexport default CustomColumnTable;","map":{"version":3,"sources":["F:/react learn/widgets/rstable/src/tb.js"],"names":["React","Checkbox","Divider","Dropdown","Icon","IconButton","Popover","Table","Whisper","config","Column","HeaderCell","Cell","Pagination","bp","data","NameCell","rowData","dataKey","props","speaker","firstName","lastName","email","companyName","sentence","toLocaleString","ImageCell","padding","width","height","background","borderRadius","marginTop","overflow","display","CheckCell","onChange","checkedKeys","lineHeight","some","item","Menu","onSelect","MenuPopover","rest","tableBody","CustomWhisper","handleSelectMenu","bind","eventKey","event","console","log","trigger","hide","ref","children","Component","ActionCell","handleAction","alert","tableData","filter","v","i","CustomColumnTable","state","handleCheckAll","handleCheck","value","checked","map","id","setState","nextCheckedKeys","indeterminate","length"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Checkbox, Divider, Dropdown, Icon, IconButton, Popover, Table, Whisper } from 'rsuite';\r\nimport 'rsuite/dist/styles/rsuite-default.css';\r\nimport config from './components/config/blueprint.json';\r\nconst { Column, HeaderCell, Cell, Pagination } = Table;\r\n\r\nconst bp= config.data;\r\n\r\n\r\nconst NameCell = ({ rowData, dataKey, ...props }) => {\r\n  const speaker = (\r\n    <Popover title=\"Description\">\r\n      <p>\r\n        <b>Name:</b> {`${rowData.firstName} ${rowData.lastName}`}{' '}\r\n      </p>\r\n      <p>\r\n        <b>Email:</b> {rowData.email}{' '}\r\n      </p>\r\n      <p>\r\n        <b>Company:</b> {rowData.companyName}{' '}\r\n      </p>\r\n      <p>\r\n        <b>Sentence:</b> {rowData.sentence}{' '}\r\n      </p>\r\n    </Popover>\r\n  );\r\n\r\n  return (\r\n    <Cell {...props}>\r\n      <Whisper placement=\"top\" speaker={speaker}>\r\n        <a>{rowData[dataKey].toLocaleString()}</a>\r\n      </Whisper>\r\n    </Cell>\r\n  );\r\n};\r\n\r\nconst ImageCell = ({ rowData, dataKey, ...props }) => (\r\n  <Cell {...props} style={{ padding: 0 }}>\r\n    <div\r\n      style={{\r\n        width: 40,\r\n        height: 40,\r\n        background: '#f5f5f5',\r\n        borderRadius: 20,\r\n        marginTop: 2,\r\n        overflow: 'hidden',\r\n        display: 'inline-block'\r\n      }}\r\n    >\r\n      <img src={rowData[dataKey]} width=\"44\" />\r\n    </div>\r\n  </Cell>\r\n);\r\n\r\nconst CheckCell = ({ rowData, onChange, checkedKeys, dataKey, ...props }) => (\r\n  <Cell {...props} style={{ padding: 0 }}>\r\n    <div style={{ lineHeight: '46px' }}>\r\n      <Checkbox\r\n        value={rowData[dataKey]}\r\n        inline\r\n        onChange={onChange}\r\n        checked={checkedKeys.some(item => item === rowData[dataKey])}\r\n      />\r\n    </div>\r\n  </Cell>\r\n);\r\n\r\nconst Menu = ({ onSelect }) => (\r\n  <Dropdown.Menu onSelect={onSelect}>\r\n    <Dropdown.Item eventKey={3}>Download As...</Dropdown.Item>\r\n    <Dropdown.Item eventKey={4}>Export PDF</Dropdown.Item>\r\n    <Dropdown.Item eventKey={5}>Export HTML</Dropdown.Item>\r\n    <Dropdown.Item eventKey={6}>Settings</Dropdown.Item>\r\n    <Dropdown.Item eventKey={7}>About</Dropdown.Item>\r\n  </Dropdown.Menu>\r\n);\r\n\r\nconst MenuPopover = ({ onSelect, ...rest }) => (\r\n  <Popover {...rest} full>\r\n    <Menu onSelect={onSelect} />\r\n  </Popover>\r\n);\r\n\r\nlet tableBody;\r\n\r\nclass CustomWhisper extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSelectMenu = this.handleSelectMenu.bind(this);\r\n  }\r\n  handleSelectMenu(eventKey, event) {\r\n    console.log(eventKey);\r\n    this.trigger.hide();\r\n  }\r\n  render() {\r\n    return (\r\n      <Whisper\r\n        placement=\"autoVerticalStart\"\r\n        trigger=\"click\"\r\n        triggerRef={ref => {\r\n          this.trigger = ref;\r\n        }}\r\n        container={() => {\r\n          return tableBody;\r\n        }}\r\n        speaker={<MenuPopover onSelect={this.handleSelectMenu} />}\r\n      >\r\n        {this.props.children}\r\n      </Whisper>\r\n    );\r\n  }\r\n}\r\n\r\nconst ActionCell = ({ rowData, dataKey, ...props }) => {\r\n  function handleAction() {\r\n    alert(`id:${rowData[dataKey]}`);\r\n  }\r\n  return (\r\n    <Cell {...props} className=\"link-group\">\r\n      <IconButton\r\n        appearance=\"subtle\"\r\n        onClick={handleAction}\r\n        icon={<Icon icon=\"edit2\" />}\r\n      />\r\n      <Divider vertical />\r\n      <CustomWhisper>\r\n        <IconButton appearance=\"subtle\" icon={<Icon icon=\"more\" />} />\r\n      </CustomWhisper>\r\n    </Cell>\r\n  );\r\n};\r\n\r\nconst data = bp.tableData.filter((v, i) => i < 20);\r\nclass CustomColumnTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      checkedKeys: [],\r\n      data\r\n    };\r\n    this.handleCheckAll = this.handleCheckAll.bind(this);\r\n    this.handleCheck = this.handleCheck.bind(this);\r\n  }\r\n  handleCheckAll(value, checked) {\r\n    const checkedKeys = checked ? data.map(item => item.id) : [];\r\n    this.setState({\r\n      checkedKeys\r\n    });\r\n  }\r\n  handleCheck(value, checked) {\r\n    const { checkedKeys } = this.state;\r\n    const nextCheckedKeys = checked\r\n      ? [...checkedKeys, value]\r\n      : checkedKeys.filter(item => item !== value);\r\n\r\n    this.setState({\r\n      checkedKeys: nextCheckedKeys\r\n    });\r\n  }\r\n  render() {\r\n    const { data, checkedKeys } = this.state;\r\n\r\n    let checked = false;\r\n    let indeterminate = false;\r\n\r\n    if (checkedKeys.length === data.length) {\r\n      checked = true;\r\n    } else if (checkedKeys.length === 0) {\r\n      checked = false;\r\n    } else if (checkedKeys.length > 0 && checkedKeys.length < data.length) {\r\n      indeterminate = true;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Table\r\n          height={420}\r\n          data={bp.tableData}\r\n          id=\"table\"\r\n          bodyRef={ref => {\r\n            tableBody = ref;\r\n          }}\r\n        >\r\n          <Column width={50} align=\"center\">\r\n            <HeaderCell style={{ padding: 0 }}>\r\n              <div style={{ lineHeight: '40px' }}>\r\n                <Checkbox\r\n                  inline\r\n                  checked={checked}\r\n                  indeterminate={indeterminate}\r\n                  onChange={this.handleCheckAll}\r\n                />\r\n              </div>\r\n            </HeaderCell>\r\n            <CheckCell\r\n              dataKey=\"id\"\r\n              checkedKeys={checkedKeys}\r\n              onChange={this.handleCheck}\r\n            />\r\n          </Column>\r\n          <Column width={80} align=\"center\">\r\n            <HeaderCell>Avartar</HeaderCell>\r\n            <ImageCell dataKey=\"avartar\" />\r\n          </Column>\r\n\r\n          <Column width={160}>\r\n            <HeaderCell>First Name</HeaderCell>\r\n            <NameCell dataKey=\"firstName\" />\r\n          </Column>\r\n\r\n          <Column width={300}>\r\n            <HeaderCell>Email</HeaderCell>\r\n            <Cell>\r\n              {rowData => (\r\n                <a href={`mailto:${rowData.email}`}>{rowData.email}</a>\r\n              )}\r\n            </Cell>\r\n          </Column>\r\n\r\n          <Column width={200}>\r\n            <HeaderCell>Action</HeaderCell>\r\n            <ActionCell dataKey=\"id\" />\r\n          </Column>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default CustomColumnTable;\r\n"]},"metadata":{},"sourceType":"module"}