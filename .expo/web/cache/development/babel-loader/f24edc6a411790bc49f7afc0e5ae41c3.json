{"ast":null,"code":"var _jsxFileName = \"F:\\\\vlinder\\\\neo_dashboard\\\\src\\\\DashboardV.tsx\";\nimport { Paper } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport BarChart from \"./components/BarChart\";\nimport CardDisplayV from \"./components/cards\";\nimport Charts from \"./components/Charts\";\nimport DonutChartV from \"./components/donutChart\";\nimport LineChartV from \"./components/LineChart\";\nimport RadarChart from \"./components/RadarChart\";\nimport TimeLineV from \"./components/timelineV\";\nvar Mystyle = {\n  backgroundColor: {\n    backgroundColor: '#eee'\n  },\n  chartstyle: {\n    backgroundColor: 'white',\n    marginLeft: '65px',\n    borderRadius: '5px',\n    padding: '10px'\n  },\n  timeline: {\n    borderRadius: '5px'\n  },\n  containerPos: {\n    marginLeft: '-45px'\n  }\n};\n\nvar DashboardV = function DashboardV(props) {\n  var getcard = function getcard() {\n    var output = [];\n    Array.isArray(props == null ? void 0 : props.graphData) && (props == null ? void 0 : props.graphData.forEach(function (items) {\n      if ((items == null ? void 0 : items.type) === 'cardData') output.push(React.createElement(Grid, {\n        container: true,\n        style: StyleSheet.flatten([items == null ? void 0 : items.styles]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, React.createElement(CardDisplayV, {\n        cardData: items == null ? void 0 : items.data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }\n      })));\n    }));\n    return output;\n  };\n\n  var getTimeline = function getTimeline() {\n    var output = [];\n    Array.isArray(props == null ? void 0 : props.graphData) && (props == null ? void 0 : props.graphData.forEach(function (items) {\n      if (items.type === 'timelinedata') {\n        output.push(React.createElement(Grid, {\n          item: true,\n          md: items == null ? void 0 : items.mediumDevice,\n          sm: items == null ? void 0 : items.smallDevice,\n          style: StyleSheet.flatten([items == null ? void 0 : items.styles]),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }\n        }, React.createElement(TimeLineV, {\n          timelinedata: items == null ? void 0 : items.dataset,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }\n        })));\n      }\n    }));\n    return output;\n  };\n\n  var _getCharts = function _getCharts() {\n    var output = [];\n    Array.isArray(props == null ? void 0 : props.graphData) && (props == null ? void 0 : props.graphData.forEach(function (items) {\n      var _items$data;\n\n      if (items.type === 'lineChartData') {\n        output.push(React.createElement(Grid, {\n          item: true,\n          md: items == null ? void 0 : items.mediumDevice,\n          sm: items == null ? void 0 : items.smallDevice,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 9\n          }\n        }, React.createElement(Paper, {\n          style: StyleSheet.flatten([items == null ? void 0 : items.styles]),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          }\n        }, React.createElement(LineChartV, {\n          lineChartData: items == null ? void 0 : items.data,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }\n        }))));\n      } else if ((items == null ? void 0 : items.type) === 'radarchart') {\n        output.push(React.createElement(Grid, {\n          md: items == null ? void 0 : items.mediumDevice,\n          sm: items == null ? void 0 : items.smallDevice,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 9\n          }\n        }, React.createElement(Paper, {\n          style: StyleSheet.flatten([items == null ? void 0 : items.styles]),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 11\n          }\n        }, React.createElement(RadarChart, {\n          RadarChartData: items == null ? void 0 : items.data,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 11\n          }\n        }))));\n      } else if ((items == null ? void 0 : items.type) === 'donutchart') output.push(React.createElement(Grid, {\n        md: items == null ? void 0 : items.mediumDevice,\n        sm: items == null ? void 0 : items.smallDevice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }\n      }, React.createElement(Paper, {\n        style: StyleSheet.flatten([items == null ? void 0 : items.styles]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }\n      }, React.createElement(DonutChartV, {\n        donutchartdata: items == null ? void 0 : items.data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }))));else if ((items == null ? void 0 : items.type) === 'barchart') output.push(React.createElement(Grid, {\n        md: items == null ? void 0 : items.mediumDevice,\n        sm: items == null ? void 0 : items.smallDevice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }\n      }, React.createElement(Paper, {\n        style: StyleSheet.flatten([items == null ? void 0 : items.styles]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }\n      }, React.createElement(BarChart, {\n        BarChartData: items == null ? void 0 : items.data,\n        barChartOptions: items == null ? void 0 : (_items$data = items.data) == null ? void 0 : _items$data.barChartOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }\n      }))));\n    }));\n\n    var getCharts = function getCharts() {\n      var output = [];\n      Array.isArray(props == null ? void 0 : props.graphData) && (props == null ? void 0 : props.graphData.forEach(function (items) {\n        if (items.type === 'timelinedata') {\n          output.push(React.createElement(Grid, {\n            item: true,\n            md: items == null ? void 0 : items.mediumDevice,\n            sm: items == null ? void 0 : items.smallDevice,\n            style: StyleSheet.flatten([items == null ? void 0 : items.styles]),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 13\n            }\n          }, React.createElement(Charts, {\n            data: items == null ? void 0 : items.data,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }\n          })));\n        }\n      }));\n      return output;\n    };\n  };\n\n  return React.createElement(View, {\n    style: StyleSheet.flatten([Mystyle.backgroundColor]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 5\n    }\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }, getcard(), getTimeline(), _getCharts()));\n};\n\nexport default DashboardV;","map":{"version":3,"sources":["F:/vlinder/neo_dashboard/src/DashboardV.tsx"],"names":["Paper","Grid","React","BarChart","CardDisplayV","Charts","DonutChartV","LineChartV","RadarChart","TimeLineV","Mystyle","backgroundColor","chartstyle","marginLeft","borderRadius","padding","timeline","containerPos","DashboardV","props","getcard","output","Array","isArray","graphData","forEach","items","type","push","StyleSheet","flatten","styles","data","getTimeline","mediumDevice","smallDevice","dataset","_getCharts","barChartOptions","getCharts"],"mappings":"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","sourcesContent":["import {Paper} from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport React from 'react';\r\nimport {StyleSheet, View} from 'react-native';\r\nimport BarChart from './components/BarChart';\r\nimport CardDisplayV from './components/cards';\r\nimport Charts from './components/Charts';\r\nimport DonutChartV from './components/donutChart';\r\nimport LineChartV from './components/LineChart';\r\nimport RadarChart from './components/RadarChart';\r\nimport TimeLineV from './components/timelineV';\r\n\r\nexport type dashBoardProps = {\r\n  graphData?: any;\r\n};\r\n\r\nconst Mystyle = {\r\n  backgroundColor: {\r\n    backgroundColor: '#eee',\r\n  },\r\n  chartstyle: {\r\n    backgroundColor: 'white',\r\n\r\n    marginLeft: '65px',\r\n    borderRadius: '5px',\r\n    padding: '10px',\r\n  },\r\n  timeline: {\r\n    borderRadius: '5px',\r\n  },\r\n  containerPos: {\r\n    marginLeft: '-45px',\r\n  },\r\n};\r\n\r\nconst DashboardV = (props: dashBoardProps) => {\r\n  const getcard = () => {\r\n    const output: any = [];\r\n    Array.isArray(props?.graphData) &&\r\n      props?.graphData.forEach(items => {\r\n        if (items?.type === 'cardData')\r\n          output.push(\r\n            <Grid container style={StyleSheet.flatten([items?.styles])}>\r\n              <CardDisplayV cardData={items?.data} />\r\n            </Grid>,\r\n          );\r\n      });\r\n    return output;\r\n  };\r\n  const getTimeline = () => {\r\n    const output: any = [];\r\n    Array.isArray(props?.graphData) &&\r\n      props?.graphData.forEach(items => {\r\n        if (items.type === 'timelinedata') {\r\n          output.push(\r\n            <Grid\r\n              item\r\n              md={items?.mediumDevice}\r\n              sm={items?.smallDevice}\r\n              style={StyleSheet.flatten([items?.styles])}\r\n            >\r\n              <TimeLineV timelinedata={items?.dataset} />\r\n            </Grid>,\r\n          );\r\n        }\r\n      });\r\n    return output;\r\n  };\r\n\r\n\r\nconst _getCharts = () => {\r\n  const output: any = [];\r\n  Array.isArray(props?.graphData) &&\r\n  props?.graphData.forEach(items => {\r\n    if (items.type === 'lineChartData') {\r\n      output.push(\r\n        <Grid\r\n          item\r\n          md={items?.mediumDevice}\r\n          sm={items?.smallDevice}\r\n\r\n        >\r\n          <Paper  style={StyleSheet.flatten([items?.styles])}>\r\n\r\n          <LineChartV lineChartData={items?.data} />\r\n          </Paper>\r\n        </Grid>,\r\n      );\r\n    }\r\n    else if (items?.type === 'radarchart') {\r\n      output.push(\r\n        <Grid\r\n        md={items?.mediumDevice}\r\n        sm={items?.smallDevice}\r\n\r\n\r\n        >\r\n          <Paper  style={StyleSheet.flatten([items?.styles])}>\r\n\r\n          <RadarChart RadarChartData={items?.data} />\r\n          </Paper>\r\n        </Grid>,\r\n      );\r\n    }\r\n    else if (items?.type === 'donutchart')\r\n            output.push(\r\n              <Grid\r\n                md={items?.mediumDevice}\r\n                sm={items?.smallDevice}\r\n\r\n\r\n              >\r\n                <Paper  style={StyleSheet.flatten([items?.styles])}\r\n                >\r\n\r\n                <DonutChartV donutchartdata={items?.data} />\r\n                </Paper>\r\n              </Grid>,\r\n            );\r\n  else if (items?.type === 'barchart')\r\n          output.push(\r\n\r\n\r\n            <Grid\r\n              md={items?.mediumDevice}\r\n              sm={items?.smallDevice}\r\n\r\n              >\r\n                <Paper  style={StyleSheet.flatten([items?.styles])}>\r\n\r\n              <BarChart\r\n                BarChartData={items?.data}\r\n                barChartOptions={items?.data?.barChartOptions}\r\n                />\r\n                </Paper>\r\n            </Grid>,\r\n\r\n\r\n          );\r\n\r\n\r\n\r\n  });\r\n\r\n\r\n  const getCharts = () => {\r\n    const output: any = [];\r\n    Array.isArray(props?.graphData) &&\r\n      props?.graphData.forEach(items => {\r\n        if (items.type === 'timelinedata') {\r\n          output.push(\r\n            <Grid\r\n              item\r\n              md={items?.mediumDevice}\r\n              sm={items?.smallDevice}\r\n              style={StyleSheet.flatten([items?.styles])}\r\n            >\r\n              <Charts data={items?.data}\r\n              />\r\n            </Grid>,\r\n          );\r\n        }\r\n      });\r\n    return output;\r\n  };\r\n}\r\n\r\n  return (\r\n    <View style={StyleSheet.flatten([Mystyle.backgroundColor])}>\r\n\r\n      <Grid container >\r\n        {getcard()}\r\n        {getTimeline()}\r\n        {_getCharts()}\r\n\r\n      </Grid>\r\n\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default DashboardV;\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}