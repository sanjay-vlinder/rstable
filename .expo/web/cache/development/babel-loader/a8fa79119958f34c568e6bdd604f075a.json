{"ast":null,"code":"var _jsxFileName = \"F:\\\\react learn\\\\widgets\\\\dashboard-new\\\\src\\\\cards.tsx\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Icon } from 'rsuite';\nvar styles = {};\n\nvar CardDisplayV = function CardDisplayV(props) {\n  var _getCards = function _getCards() {\n    var _tempData = [];\n    Array.isArray(props == null ? void 0 : props.cardData) && (props == null ? void 0 : props.cardData.forEach(function (item) {\n      var i = 0;\n\n      _tempData.push(React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }, React.createElement(Paper, {\n        style: {\n          backgroundImage: item == null ? void 0 : item.backgroundColor,\n          padding: 10,\n          textAlign: 'center',\n          boxShadow: \"2px 10px 10px rgba(100,100,255,0.3)\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }, React.createElement(Icon, {\n        style: StyleSheet.flatten([styles.ContentStyles, props == null ? void 0 : props.ContentIconStyles]),\n        icon: item.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 12\n        }\n      }), React.createElement(Text, {\n        style: StyleSheet.flatten([styles.ContentStyles, props == null ? void 0 : props.ContentTitleStyles]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, item == null ? void 0 : item.title), React.createElement(Text, {\n        style: StyleSheet.flatten([styles.ContentStyles, props == null ? void 0 : props.ContentDescriptionStyles]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }, item == null ? void 0 : item.description), React.createElement(Text, {\n        style: StyleSheet.flatten([styles.ContentStyles, props == null ? void 0 : props.ContentHeaderStyles]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, item == null ? void 0 : item.header))));\n    }));\n    return _tempData;\n  };\n\n  return React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    style: {\n      background: \"#eeee\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, _getCards()));\n};\n\nexport default CardDisplayV;","map":{"version":3,"sources":["F:/react learn/widgets/dashboard-new/src/cards.tsx"],"names":["Grid","Paper","React","Icon","styles","CardDisplayV","props","_getCards","_tempData","Array","isArray","cardData","forEach","item","i","push","backgroundImage","backgroundColor","padding","textAlign","boxShadow","StyleSheet","flatten","ContentStyles","ContentIconStyles","icon","ContentTitleStyles","title","ContentDescriptionStyles","description","ContentHeaderStyles","header","background"],"mappings":"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","sourcesContent":["//@ts-nocheck\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport React from 'react';\r\nimport {StyleSheet, Text} from 'react-native';\r\nimport {Icon} from 'rsuite';\r\n\r\n\r\n\r\nconst styles = {\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\ntype cardprops={\r\n  title?: string\r\n  description?:string\r\n  children?: React.ReactNode\r\n  cardData?: {header?:string, title?: string,description?: string,icon?:string,backgroundColor?:string}[]\r\n  titleStyles?:any\r\n  subtitleStyles?:any\r\n  ContentHeaderStyles?:any\r\n  ContentTitleStyles?:any\r\n  ContentDescriptionStyles?:any\r\n  ContentIconStyles?:any\r\n\r\n\r\n}\r\n\r\n const CardDisplayV = (props:cardprops) => {\r\n  const _getCards = () => {\r\n\r\n\r\n    const _tempData:any = [];\r\n  // eslint-disable-next-line no-unused-expressions\r\n    Array.isArray(props?.cardData) && props?.cardData.forEach(item=>{\r\n      const i= 0\r\n      _tempData.push(\r\n        <Grid item xs={12} sm={6} md={3}>\r\n        <Paper  style={{backgroundImage:item?.backgroundColor,padding: 10,textAlign: 'center',boxShadow:\"2px 10px 10px rgba(100,100,255,0.3)\"}} >\r\n           <Icon style={StyleSheet.flatten([styles.ContentStyles, props?.ContentIconStyles])} icon={item.icon}/>\r\n          <Text style={StyleSheet.flatten([styles.ContentStyles, props?.ContentTitleStyles])}>{item?.title}</Text>\r\n          <Text style={StyleSheet.flatten([styles.ContentStyles, props?.ContentDescriptionStyles])}>{item?.description}</Text>\r\n          <Text style={StyleSheet.flatten([styles.ContentStyles, props?.ContentHeaderStyles])}>{item?.header}</Text>\r\n        </Paper>\r\n     </Grid>\r\n      )\r\n    });\r\n    return _tempData;\r\n  }\r\n\r\n  return(\r\n    <Grid container justify={\"center\"} alignItems={\"center\"} >\r\n\r\n\r\n      <Grid container   spacing={3} style={{background:\"#eeee\" }}>\r\n      {_getCards()}\r\n\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\n\r\nexport default CardDisplayV;\r\n"]},"metadata":{},"sourceType":"module"}