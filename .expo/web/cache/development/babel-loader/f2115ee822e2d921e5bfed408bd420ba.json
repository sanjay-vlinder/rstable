{"ast":null,"code":"var _jsxFileName = \"F:\\\\vlinder\\\\neo_dashboard\\\\src\\\\DashboardV.tsx\";\nimport { Paper } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport BarChart from \"./components/BarChart\";\nimport DonutChartV from \"./components/donutChart\";\nimport LineChartV from \"./components/LineChart\";\nimport RadarChart from \"./components/RadarChart\";\nvar Mystyle = {\n  backgroundColor: {\n    backgroundColor: '#eee'\n  },\n  chartstyle: {\n    backgroundColor: 'white',\n    marginLeft: '65px',\n    borderRadius: '5px',\n    padding: '10px'\n  },\n  timeline: {\n    borderRadius: '5px'\n  },\n  containerPos: {\n    marginLeft: '-45px'\n  }\n};\n\nvar DashboardV = function DashboardV(props) {\n  var _getCharts = function _getCharts() {\n    var output = [];\n    Array.isArray(props == null ? void 0 : props.graphData) && (props == null ? void 0 : props.graphData.forEach(function (items) {\n      var _items$data;\n\n      if (items.type === 'lineChartData') {\n        output.push(React.createElement(Grid, {\n          item: true,\n          md: items == null ? void 0 : items.mediumDevice,\n          sm: items == null ? void 0 : items.smallDevice,\n          style: StyleSheet.flatten([items == null ? void 0 : items.styles]),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 9\n          }\n        }, React.createElement(Paper, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 11\n          }\n        }, React.createElement(LineChartV, {\n          lineChartData: items == null ? void 0 : items.data,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 11\n          }\n        }))));\n      } else if ((items == null ? void 0 : items.type) === 'radarchart') {\n        output.push(React.createElement(Grid, {\n          md: items == null ? void 0 : items.mediumDevice,\n          sm: items == null ? void 0 : items.smallDevice,\n          spacing: 3,\n          justify: \"space-around\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 9\n          }\n        }, React.createElement(Paper, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 11\n          }\n        }, React.createElement(RadarChart, {\n          RadarChartData: items == null ? void 0 : items.data,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 11\n          }\n        }))));\n      } else if ((items == null ? void 0 : items.type) === 'donutchart') output.push(React.createElement(Grid, {\n        md: items == null ? void 0 : items.mediumDevice,\n        sm: items == null ? void 0 : items.smallDevice,\n        spacing: 3,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 15\n        }\n      }, React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }\n      }, React.createElement(DonutChartV, {\n        donutchartdata: items == null ? void 0 : items.data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 17\n        }\n      }))));else if ((items == null ? void 0 : items.type) === 'barchart') output.push(React.createElement(Grid, {\n        md: items == null ? void 0 : items.mediumDevice,\n        sm: items == null ? void 0 : items.smallDevice,\n        spacing: 3,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }\n      }, React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 17\n        }\n      }, React.createElement(BarChart, {\n        BarChartData: items == null ? void 0 : items.data,\n        barChartOptions: items == null ? void 0 : (_items$data = items.data) == null ? void 0 : _items$data.barChartOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }\n      }))));\n    }));\n    return output;\n  };\n\n  return React.createElement(View, {\n    style: StyleSheet.flatten([Mystyle.backgroundColor]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 5\n    }\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }\n  }, _getCharts()));\n};\n\nexport default DashboardV;","map":{"version":3,"sources":["F:/vlinder/neo_dashboard/src/DashboardV.tsx"],"names":["Paper","Grid","React","BarChart","DonutChartV","LineChartV","RadarChart","Mystyle","backgroundColor","chartstyle","marginLeft","borderRadius","padding","timeline","containerPos","DashboardV","props","_getCharts","output","Array","isArray","graphData","forEach","items","type","push","mediumDevice","smallDevice","StyleSheet","flatten","styles","data","barChartOptions"],"mappings":"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","sourcesContent":["import {Paper} from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport React from 'react';\r\nimport {StyleSheet, View} from 'react-native';\r\nimport BarChart from './components/BarChart';\r\nimport DonutChartV from './components/donutChart';\r\nimport LineChartV from './components/LineChart';\r\nimport RadarChart from './components/RadarChart';\r\n\r\n\r\nexport type dashBoardProps = {\r\n  graphData?: any;\r\n};\r\n\r\nconst Mystyle = {\r\n  backgroundColor: {\r\n    backgroundColor: '#eee',\r\n  },\r\n  chartstyle: {\r\n    backgroundColor: 'white',\r\n\r\n    marginLeft: '65px',\r\n    borderRadius: '5px',\r\n    padding: '10px',\r\n  },\r\n  timeline: {\r\n    borderRadius: '5px',\r\n  },\r\n  containerPos: {\r\n    marginLeft: '-45px',\r\n  },\r\n};\r\n\r\nconst DashboardV = (props: dashBoardProps) => {\r\n  // const getcard = () => {\r\n  //   const output: any = [];\r\n  //   Array.isArray(props?.graphData) &&\r\n  //     props?.graphData.forEach(items => {\r\n  //       if (items?.type === 'cardData')\r\n  //         output.push(\r\n  //           <Grid container style={StyleSheet.flatten([items?.styles])}>\r\n  //             <CardDisplayV cardData={items?.data} />\r\n  //           </Grid>,\r\n  //         );\r\n  //     });\r\n  //   return output;\r\n  // };\r\n  // const getTimeline = () => {\r\n  //   const output: any = [];\r\n  //   Array.isArray(props?.graphData) &&\r\n  //     props?.graphData.forEach(items => {\r\n  //       if (items.type === 'timelinedata') {\r\n  //         output.push(\r\n  //           <Grid\r\n  //             item\r\n  //             md={items?.mediumDevice}\r\n  //             sm={items?.smallDevice}\r\n  //             style={StyleSheet.flatten([items?.styles])}\r\n  //           >\r\n  //             <TimeLineV timelinedata={items?.dataset} />\r\n  //           </Grid>,\r\n  //         );\r\n  //       }\r\n  //     });\r\n  //   return output;\r\n  // };\r\n  // const getLineChart = () => {\r\n  //   const output: any = [];\r\n  //   Array.isArray(props?.graphData) &&\r\n  //     props?.graphData.forEach(items => {\r\n  //       if (items.type === 'lineChartData') {\r\n  //         output.push(\r\n  //           <Grid\r\n  //             item\r\n  //             md={items?.mediumDevice}\r\n  //             sm={items?.smallDevice}\r\n  //             style={StyleSheet.flatten([items?.styles])}\r\n  //           >\r\n  //             <LineChartV lineChartData={items?.data} />\r\n  //           </Grid>,\r\n  //         );\r\n  //       }\r\n  //     });\r\n  //   return output;\r\n  // };\r\n\r\n  // const _getRadarChart = () => {\r\n  //   const cardsecoutput: any = [];\r\n  //   Array.isArray(props?.graphData) &&\r\n  //     props?.graphData.forEach(items => {\r\n  //       if (items?.type === 'radarchart') {\r\n  //         cardsecoutput.push(\r\n  //           <Col\r\n  //             md={items?.mediumDevice}\r\n  //             sm={items?.smallDevice}\r\n  //             style={StyleSheet.flatten([items?.styles])}\r\n  //           >\r\n  //             <RadarChart RadarChartData={items?.data} />\r\n  //           </Col>,\r\n  //         );\r\n  //       }\r\n  //     });\r\n  //   return cardsecoutput;\r\n  // };\r\n\r\n  // const getdonutChart = () => {\r\n  //   const output: any = [];\r\n  //   Array.isArray(props?.graphData) &&\r\n  //     props?.graphData.forEach(items => {\r\n  //       if (items?.type === 'donutchart')\r\n  //         output.push(\r\n  //           <Col\r\n  //             md={items?.mediumDevice}\r\n  //             sm={items?.smallDevice}\r\n  //             style={StyleSheet.flatten([items?.styles])}\r\n  //           >\r\n  //             <DonutChartV donutchartdata={items?.data} />\r\n  //           </Col>,\r\n  //         );\r\n  //     });\r\n  //   return output;\r\n  // };\r\n\r\n  // const getbarChart = () => {\r\n  //   const output: any = [];\r\n  //   Array.isArray(props?.graphData) &&\r\n  //     props?.graphData.forEach(items => {\r\n  //       if (items?.type === 'barchart')\r\n  //         output.push(\r\n  //           <Col\r\n  //             md={items?.mediumDevice}\r\n  //             sm={items?.smallDevice}\r\n  //             style={StyleSheet.flatten([items?.styles])}\r\n  //           >\r\n  //             <BarChart\r\n  //               BarChartData={items?.data}\r\n  //               barChartOptions={items?.data?.barChartOptions}\r\n  //             />\r\n  //           </Col>,\r\n  //         );\r\n  //     });\r\n  //   return output;\r\n  // };\r\n\r\n\r\nconst _getCharts = () => {\r\n  const output: any = [];\r\n  Array.isArray(props?.graphData) &&\r\n  props?.graphData.forEach(items => {\r\n    if (items.type === 'lineChartData') {\r\n      output.push(\r\n        <Grid\r\n          item\r\n          md={items?.mediumDevice}\r\n          sm={items?.smallDevice}\r\n          style={StyleSheet.flatten([items?.styles])}\r\n        >\r\n          <Paper>\r\n\r\n          <LineChartV lineChartData={items?.data} />\r\n          </Paper>\r\n        </Grid>,\r\n      );\r\n    }\r\n    else if (items?.type === 'radarchart') {\r\n      output.push(\r\n        <Grid\r\n        md={items?.mediumDevice}\r\n        sm={items?.smallDevice}\r\n        spacing={3}\r\n        justify=\"space-around\"\r\n\r\n        >\r\n          <Paper>\r\n\r\n          <RadarChart RadarChartData={items?.data} />\r\n          </Paper>\r\n        </Grid>,\r\n      );\r\n    }\r\n    else   if (items?.type === 'donutchart')\r\n            output.push(\r\n              <Grid\r\n                md={items?.mediumDevice}\r\n                sm={items?.smallDevice}\r\n                spacing={3}\r\n                justify=\"center\"\r\n\r\n              >\r\n                <Paper>\r\n\r\n                <DonutChartV donutchartdata={items?.data} />\r\n                </Paper>\r\n              </Grid>,\r\n            );\r\n  else if (items?.type === 'barchart')\r\n          output.push(\r\n\r\n\r\n            <Grid\r\n              md={items?.mediumDevice}\r\n              sm={items?.smallDevice}\r\n\r\n              spacing={3}\r\n                justify=\"center\"\r\n              >\r\n                <Paper>\r\n\r\n              <BarChart\r\n                BarChartData={items?.data}\r\n                barChartOptions={items?.data?.barChartOptions}\r\n                />\r\n                </Paper>\r\n            </Grid>,\r\n\r\n\r\n          );\r\n\r\n  });\r\nreturn output;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <View style={StyleSheet.flatten([Mystyle.backgroundColor])}>\r\n\r\n      <Grid container >\r\n        {_getCharts()}\r\n\r\n              {/* {getcard()}\r\n              {getTimeline()}\r\n              {getLineChart()}\r\n            {_getRadarChart()}\r\n            {getdonutChart()}\r\n            {getbarChart()} */}\r\n      </Grid>\r\n\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default DashboardV;\r\n\r\n\r\n\r\n\r\n// <Header />\r\n// <Grid container>\r\n//   <Grid item xs={12} sm={9} md={1}>\r\n//     <NavbarV />\r\n//   </Grid>\r\n\r\n//   <Grid\r\n//     item\r\n//     xs={12}\r\n//     sm={9}\r\n//     md={11}\r\n//     style={StyleSheet.flatten([Mystyle.containerPos])}\r\n//   >\r\n//     <Grid container>\r\n//       <Grid\r\n//         item\r\n//         xs={11}\r\n//         sm={9}\r\n//         md={12}\r\n//         style={StyleSheet.flatten([Mystyle.backgroundColor])}\r\n//       >\r\n//         {getcard()}\r\n//       </Grid>\r\n//       <Grid container style={{marginLeft: '40px'}}>\r\n//         {getTimeline()}\r\n\r\n//         {getLineChart()}\r\n//       </Grid>\r\n//     </Grid>\r\n\r\n//     <Grid container>\r\n//       {_getRadarChart()}\r\n//       {getdonutChart()}\r\n//       {getbarChart()}\r\n//     </Grid>\r\n//   </Grid>\r\n// </Grid>\r\n"]},"metadata":{},"sourceType":"module"}