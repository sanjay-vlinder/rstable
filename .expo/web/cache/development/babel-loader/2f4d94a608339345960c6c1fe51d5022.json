{"ast":null,"code":"var _jsxFileName = \"F:\\\\react learn\\\\widgets\\\\DashboardTs-main (1)\\\\src\\\\cards.tsx\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nvar styles = {\n  titleStyle: {},\n  descriptionStyle: {},\n  ContentStyles: {},\n  paper: {\n    padding: 10,\n    textAlign: 'center',\n    color: '#000'\n  }\n};\nexport var CardDisplayV = function CardDisplayV(props) {\n  var _getCards = function _getCards() {\n    var _tempData = [];\n    Array.isArray(props == null ? void 0 : props.cardData) && (props == null ? void 0 : props.cardData.forEach(function (item) {\n      _tempData.push(React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, React.createElement(Paper, {\n        style: StyleSheet.flatten(styles.paper),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }, (item == null ? void 0 : item.icon) ? React.createElement(\"img\", {\n        style: StyleSheet.flatten([styles.ContentStyles, props == null ? void 0 : props.ContentIconStyles]),\n        src: item.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 28\n        }\n      }) : null, React.createElement(Text, {\n        style: StyleSheet.flatten([styles.ContentStyles, props == null ? void 0 : props.ContentHeaderStyles]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 14\n        }\n      }, item == null ? void 0 : item.header), React.createElement(Text, {\n        style: StyleSheet.flatten([styles.ContentStyles, props == null ? void 0 : props.ContentTitleStyles]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 14\n        }\n      }, item == null ? void 0 : item.title), React.createElement(Text, {\n        style: StyleSheet.flatten([styles.ContentStyles, props == null ? void 0 : props.ContentDescriptionStyles]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 14\n        }\n      }, item == null ? void 0 : item.description))));\n    }));\n    return _tempData;\n  };\n\n  return React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: StyleSheet.flatten([styles.titleStyle, props == null ? void 0 : props.titleStyles]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, props == null ? void 0 : props.title), React.createElement(Text, {\n    style: StyleSheet.flatten([styles.descriptionStyle, props == null ? void 0 : props.subtitleStyles]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, props == null ? void 0 : props.description)), React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, _getCards())));\n};","map":{"version":3,"sources":["F:/react learn/widgets/DashboardTs-main (1)/src/cards.tsx"],"names":["Grid","Paper","React","styles","titleStyle","descriptionStyle","ContentStyles","paper","padding","textAlign","color","CardDisplayV","props","_getCards","_tempData","Array","isArray","cardData","forEach","item","push","StyleSheet","flatten","icon","ContentIconStyles","ContentHeaderStyles","header","ContentTitleStyles","title","ContentDescriptionStyles","description","titleStyles","subtitleStyles"],"mappings":"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","sourcesContent":["//@ts-nocheck\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport React from 'react';\r\nimport {StyleSheet, Text} from 'react-native';\r\n\r\n\r\nconst styles = {\r\n  titleStyle:{\r\n\r\n  },\r\n  descriptionStyle:{\r\n\r\n  },\r\n  ContentStyles:{\r\n\r\n  },\r\n  paper: {\r\n    padding: 10,\r\n    textAlign: 'center',\r\n    color: '#000',\r\n  }\r\n}\r\n\r\ntype cardprops={\r\n  title?: string\r\n  description?:string\r\n  children?: React.ReactNode\r\n  cardData?: {header?:string, title?: string,description?: string,icon?:string}[]\r\n  titleStyles?:any\r\n  subtitleStyles?:any\r\n  ContentHeaderStyles?:any\r\n  ContentTitleStyles?:any\r\n  ContentDescriptionStyles?:any\r\n  ContentIconStyles?:any\r\n}\r\n\r\nexport const CardDisplayV = (props:cardprops) => {\r\n  const _getCards = () => {\r\n\r\n    // let _data = Array.isArray(props?.cardData) && props?.cardData.map(item=>{\r\n    //   return(\r\n    //     <Grid item xs={12} sm={6} md={3}>\r\n    //       <Paper style={StyleSheet.flatten(styles.paper)}>\r\n    //          <h1 style={props.ContentHeaderStyles}>{item?.header}</h1>\r\n    //          <h3 style={props.ContentTitleStyles}>{item?.title}</h3>\r\n    //          <p>{item?.description}</p>\r\n    //        </Paper>\r\n    //     </Grid>\r\n    //   )\r\n    // });\r\n    // return _data;\r\n\r\n    const _tempData:any = [];\r\n  // eslint-disable-next-line no-unused-expressions\r\n    Array.isArray(props?.cardData) && props?.cardData.forEach(item=>{\r\n      _tempData.push(\r\n        <Grid item xs={12} sm={6} md={3}>\r\n          <Paper style={StyleSheet.flatten(styles.paper)}>\r\n            {\r\n              item?.icon ? <img style={StyleSheet.flatten([styles.ContentStyles, props?.ContentIconStyles])} src={item.icon}/> : null\r\n            }\r\n             <Text style={StyleSheet.flatten([styles.ContentStyles, props?.ContentHeaderStyles])}>{item?.header}</Text>\r\n             <Text style={StyleSheet.flatten([styles.ContentStyles, props?.ContentTitleStyles])}>{item?.title}</Text>\r\n             <Text style={StyleSheet.flatten([styles.ContentStyles, props?.ContentDescriptionStyles])}>{item?.description}</Text>\r\n           </Paper>\r\n        </Grid>\r\n      )\r\n    });\r\n    return _tempData;\r\n  }\r\n\r\n  return(\r\n    <Grid container justify={\"center\"} alignItems={\"center\"} >\r\n      <Grid item xs={12}>\r\n        <Text style={StyleSheet.flatten([styles.titleStyle, props?.titleStyles])}>{props?.title}</Text>\r\n        <Text style={StyleSheet.flatten([styles.descriptionStyle, props?.subtitleStyles])}>{props?.description}</Text>\r\n      </Grid>\r\n      <Grid item xs={11}>\r\n      <Grid container justify={\"center\"} alignItems={\"center\"} spacing={4}>\r\n      {_getCards()}\r\n      </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}