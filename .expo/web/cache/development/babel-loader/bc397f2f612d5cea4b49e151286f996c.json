{"ast":null,"code":"var _jsxFileName = \"F:\\\\vlinder\\\\neo_dashboard\\\\src\\\\DashboardV.tsx\";\nimport Grid from '@material-ui/core/Grid';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { default as CardDisplayV, default as Cards } from \"./components/cards\";\nimport CardSection3 from \"./components/card_section3\";\nimport Header from \"./components/headerV\";\nimport LineChartV from \"./components/LineChart\";\nimport NavbarV from \"./components/Navbar\";\nimport SmallCardLayout from \"./components/SmallCardLayout\";\nvar Mystyle1 = {\n  backgroundColor: {\n    backgroundColor: '#eee'\n  },\n  chartstyle: {\n    backgroundColor: 'white',\n    margin: '10px',\n    borderRadius: '5px',\n    padding: '10px',\n    boxShadow: '2px 2px #ccc',\n    marginLeft: \"200px\"\n  },\n  containerPos: {\n    marginLeft: \"-45px\"\n  }\n};\nvar cardData = [{\n  backgroundColor: \"linear-gradient(to top left , #42aa, #bd35f3)\",\n  icon: \"envelope\",\n  header: \"93\",\n  title: \"Scans\",\n  description: \"Today\"\n}, {\n  backgroundColor: \"linear-gradient(to bottom, #cdeb8e 0%,#a5c956 80%)\",\n  icon: \"envelope\",\n  header: \"4.2 \",\n  title: \"Ratings\",\n  description: \"Today\"\n}, {\n  backgroundColor: \"linear-gradient(to top, #654ea3, #eaafc8)\",\n  icon: \"envelope\",\n  header: \"89\",\n  title: \"Reviews\",\n  description: \"Today\"\n}, {\n  backgroundColor: \"linear-gradient(to bottom,#4ecdc4 , #556270 )\",\n  icon: \"envelope\",\n  header: \"100\",\n  title: \"Users\",\n  description: \"Today\"\n}];\nvar ContentHeaderStyles = {\n  display: 'flex',\n  color: '#f5f5f5',\n  fontSize: '50px',\n  fontWeight: '600'\n};\nvar ContentTitleStyles = {\n  display: 'flex',\n  fontWeight: '500',\n  color: 'white',\n  textTransform: 'uppercase',\n  fontSize: '20px'\n};\nvar ContentIconStyles = {\n  width: '50px',\n  height: '50px',\n  float: \"right\",\n  fontSize: \"50px\",\n  color: \"#f5f5f5\",\n  opacity: 0.5\n};\nvar ContentDescriptionStyles = {\n  display: 'flex',\n  fontWeight: '350',\n  fontSize: '20px',\n  color: 'white'\n};\nvar Mystyle = {\n  backgroundColor: {\n    backgroundColor: '#eee'\n  },\n  chartstyle: {\n    backgroundColor: 'white',\n    marginLeft: '65px',\n    borderRadius: '5px',\n    padding: '10px'\n  },\n  timeline: {\n    borderRadius: '5px'\n  },\n  containerPos: {\n    marginLeft: \"-45px\"\n  }\n};\n\nvar DashboardV = function DashboardV(props) {\n  var _getSmallCard = function _getSmallCard() {\n    var smallOutput = [];\n    Array.isArray(props == null ? void 0 : props.graphData) && (props == null ? void 0 : props.graphData.forEach(function (items) {\n      var _items$smallcardlayou, _items$smallcardlayou2, _items$smallcardlayou3, _items$smallcardlayou4, _items$smallcardlayou5;\n\n      smallOutput.push(React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }\n      }, React.createElement(Grid, {\n        item: true,\n        md: items == null ? void 0 : (_items$smallcardlayou = items.smallcardlayout) == null ? void 0 : _items$smallcardlayou.md,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }\n      }, React.createElement(SmallCardLayout, {\n        tinyBarChartData: items == null ? void 0 : (_items$smallcardlayou2 = items.smallcardlayout) == null ? void 0 : _items$smallcardlayou2.tinybarchart,\n        tinyLineChartData: items == null ? void 0 : (_items$smallcardlayou3 = items.smallcardlayout) == null ? void 0 : _items$smallcardlayou3.tinylinechart,\n        tinyAreaChartData: items == null ? void 0 : (_items$smallcardlayou4 = items.smallcardlayout) == null ? void 0 : _items$smallcardlayou4.tinyareachart,\n        AnglePieData: items == null ? void 0 : (_items$smallcardlayou5 = items.smallcardlayout) == null ? void 0 : _items$smallcardlayou5.anglepie,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }\n      }))));\n    }));\n    return smallOutput;\n  };\n\n  var getLineChart = function getLineChart() {\n    var output = [];\n    Array.isArray(props == null ? void 0 : props.graphData) && (props == null ? void 0 : props.graphData.forEach(function (items) {\n      if (items.type === \"lineChartData\") {\n        output.push(React.createElement(Grid, {\n          item: true,\n          md: items == null ? void 0 : items.md,\n          sm: items == null ? void 0 : items.sm,\n          style: StyleSheet.flatten([items == null ? void 0 : items.styles]),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }\n        }, React.createElement(LineChartV, {\n          lineChartData: items == null ? void 0 : items.data,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }\n        })));\n      }\n    }));\n    return output;\n  };\n\n  var _getCardSection = function _getCardSection() {\n    var cardsecoutput = [];\n    Array.isArray(props == null ? void 0 : props.graphData) && (props == null ? void 0 : props.graphData.forEach(function (items) {\n      var _items$cardsection, _items$cardsection2, _items$cardsection2$a, _items$cardsection3, _items$cardsection3$b;\n\n      cardsecoutput.push(React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 9,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 1\n        }\n      }, React.createElement(CardSection3, {\n        RadarChartData: items == null ? void 0 : (_items$cardsection = items.cardsection3) == null ? void 0 : _items$cardsection.radarchart,\n        AreaChartData: items == null ? void 0 : (_items$cardsection2 = items.cardsection3) == null ? void 0 : (_items$cardsection2$a = _items$cardsection2.areachart) == null ? void 0 : _items$cardsection2$a.dataset,\n        BarChartData: items == null ? void 0 : (_items$cardsection3 = items.cardsection3) == null ? void 0 : (_items$cardsection3$b = _items$cardsection3.barchart) == null ? void 0 : _items$cardsection3$b.dataset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 3\n        }\n      })));\n    }));\n    return cardsecoutput;\n  };\n\n  return React.createElement(View, {\n    style: StyleSheet.flatten([Mystyle.backgroundColor]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }\n  }), React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 9,\n    md: 11,\n    style: StyleSheet.flatten([Mystyle1.containerPos]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    sm: 9,\n    md: 12,\n    style: StyleSheet.flatten([Mystyle1.chartstyle]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, React.createElement(CardDisplayV, {\n    cardData: cardData,\n    ContentHeaderStyles: ContentHeaderStyles,\n    ContentTitleStyles: ContentTitleStyles,\n    ContentIconStyles: ContentIconStyles,\n    ContentDescriptionStyles: ContentDescriptionStyles,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }))))), React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 9,\n    md: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 9,\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }\n  }, React.createElement(NavbarV, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 9,\n    md: 11,\n    style: StyleSheet.flatten([Mystyle.containerPos]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    sm: 9,\n    md: 12,\n    style: StyleSheet.flatten([Mystyle.backgroundColor]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }, React.createElement(Cards, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }\n  })), React.createElement(Grid, {\n    container: true,\n    style: {\n      marginLeft: \"40px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }\n  }, getLineChart()), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 9,\n    md: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }\n  }), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 9,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 5\n    }\n  }, _getCardSection())))));\n};\n\nexport default DashboardV;","map":{"version":3,"sources":["F:/vlinder/neo_dashboard/src/DashboardV.tsx"],"names":["Grid","React","default","CardDisplayV","Cards","CardSection3","Header","LineChartV","NavbarV","SmallCardLayout","Mystyle1","backgroundColor","chartstyle","margin","borderRadius","padding","boxShadow","marginLeft","containerPos","cardData","icon","header","title","description","ContentHeaderStyles","display","color","fontSize","fontWeight","ContentTitleStyles","textTransform","ContentIconStyles","width","height","float","opacity","ContentDescriptionStyles","Mystyle","timeline","DashboardV","props","_getSmallCard","smallOutput","Array","isArray","graphData","forEach","items","push","smallcardlayout","md","tinybarchart","tinylinechart","tinyareachart","anglepie","getLineChart","output","type","sm","StyleSheet","flatten","styles","data","_getCardSection","cardsecoutput","cardsection3","radarchart","areachart","dataset","barchart"],"mappings":"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","sourcesContent":["import Grid from '@material-ui/core/Grid';\r\nimport React from 'react';\r\nimport {StyleSheet, View} from 'react-native';\r\nimport {default as CardDisplayV, default as Cards} from './components/cards';\r\nimport CardSection3 from './components/card_section3';\r\nimport Header from './components/headerV';\r\nimport LineChartV from './components/LineChart';\r\nimport NavbarV from './components/Navbar';\r\nimport SmallCardLayout from './components/SmallCardLayout';\r\n\r\n\r\nconst Mystyle1={\r\n  backgroundColor:{\r\n    backgroundColor:'#eee'\r\n  },\r\n  chartstyle:{\r\n    backgroundColor:'white',\r\n    margin:'10px',\r\n    borderRadius:'5px',\r\n    padding:'10px',\r\n    boxShadow: '2px 2px #ccc',\r\n    marginLeft:\"200px\"\r\n  },\r\n  containerPos:{\r\n    marginLeft:\"-45px\"\r\n  }\r\n}\r\nconst cardData=[{\r\n  backgroundColor:\"linear-gradient(to top left , #42aa, #bd35f3)\",\r\n  icon:\"envelope\",\r\n  header:\"93\",\r\n  title:\"Scans\",\r\n  description:\"Today\"\r\n},\r\n{\r\n  backgroundColor:\"linear-gradient(to bottom, #cdeb8e 0%,#a5c956 80%)\",\r\n  icon:\"envelope\",\r\n  header:\"4.2 \",\r\n  title:\"Ratings\",\r\n  description:\"Today\"},\r\n{\r\n  backgroundColor:\"linear-gradient(to top, #654ea3, #eaafc8)\",\r\n  icon:\"envelope\",\r\n  header:\"89\",\r\n  title:\"Reviews\",\r\n  description:\"Today\"},\r\n{\r\n  backgroundColor:\"linear-gradient(to bottom,#4ecdc4 , #556270 )\",\r\n  icon:\"envelope\",\r\n  header:\"100\",\r\n  title:\"Users\",\r\n  description:\"Today\"}];\r\nconst ContentHeaderStyles={\r\n  display:'flex',\r\n  color:'#f5f5f5',\r\n  fontSize:'50px',\r\n  fontWeight:'600'\r\n}\r\nconst ContentTitleStyles={\r\n  display:'flex',\r\n  fontWeight:'500',\r\n  color:'white',\r\n  textTransform: 'uppercase',\r\n  fontSize:'20px',\r\n}\r\nconst ContentIconStyles={\r\n  width:'50px',\r\n  height:'50px',\r\n  float:\"right\",\r\n  fontSize:\"50px\",\r\n  color:\"#f5f5f5\",\r\n  opacity:0.5\r\n}\r\n\r\nconst ContentDescriptionStyles={\r\n  display:'flex',\r\n  fontWeight:'350',\r\n  fontSize:'20px',\r\n  color:'white',\r\n}\r\n\r\n\r\nexport type dashBoardProps= {\r\n  graphData?:any;\r\n  // tinyLineChartData:any;\r\n\r\n  // tinyBarChartData:any;\r\n  // tinyAreaChartData:any;\r\n  // AnglePieData:any;\r\n  // RadarData:any;\r\n  // PieDonutChartData:any;\r\n  // BarChartData:any;\r\n  // timelinedata:any;\r\n\r\n}\r\n\r\n\r\nconst Mystyle={\r\n  backgroundColor:{\r\n    backgroundColor:'#eee'\r\n  },\r\n  chartstyle:{\r\n    backgroundColor:'white',\r\n\r\n    marginLeft:'65px',\r\n    borderRadius:'5px',\r\n    padding:'10px',\r\n\r\n  },\r\n  timeline :{\r\n    borderRadius:'5px'\r\n\r\n  },\r\n  containerPos:{\r\n    marginLeft:\"-45px\"\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst  DashboardV=(props: dashBoardProps)=> {\r\n  const _getSmallCard= ()=> {\r\n    const smallOutput:any =[];\r\n    Array.isArray(props?.graphData) && props?.graphData.forEach(items=>{\r\n      smallOutput.push(\r\n        <Grid container>\r\n\r\n          <Grid item md={items?.smallcardlayout?.md}>\r\n          <SmallCardLayout\r\n\r\n             tinyBarChartData={items?.smallcardlayout?.tinybarchart}\r\n             tinyLineChartData={items?.smallcardlayout?.tinylinechart}\r\n               tinyAreaChartData={items?.smallcardlayout?.tinyareachart}\r\n                AnglePieData={items?.smallcardlayout?.anglepie}\r\n        />\r\n          </Grid>\r\n\r\n                </Grid>\r\n      )\r\n    });\r\n    return smallOutput;\r\n\r\n  }\r\n\r\n    const getLineChart = () =>{\r\n      const output: any =[];\r\n      Array.isArray(props?.graphData) && props?.graphData.forEach(items=>{\r\n        if(items.type === \"lineChartData\")\r\n        {\r\n        output.push(\r\n            <Grid item md={items?.md} sm={items?.sm}style={StyleSheet.flatten([items?.styles])} >\r\n              <LineChartV\r\n                lineChartData={items?.data}  />\r\n            </Grid>\r\n        )\r\n        }\r\n      });\r\n      return output;\r\n    }\r\n\r\n\r\n\r\n    const _getCardSection= ()=> {\r\n      const cardsecoutput:any =[];\r\n      Array.isArray(props?.graphData) && props?.graphData.forEach(items=>{\r\n        cardsecoutput.push(\r\n\r\n<Grid item xs={12} sm={9} md={12}>\r\n  <CardSection3\r\n  RadarChartData={items?.cardsection3?.radarchart}\r\n  AreaChartData={items?.cardsection3?.areachart?.dataset}\r\n  BarChartData={items?.cardsection3?.barchart?.dataset}\r\n  />\r\n    </Grid>\r\n        )\r\n      });\r\n      return cardsecoutput;\r\n\r\n    }\r\n\r\n\r\n  return (\r\n    // <div>\r\n    //   {_getSmallCard()}\r\n    //   {getLineChart()}\r\n    //   {_getCardSection()}\r\n\r\n    // </div>\r\n    <View style={StyleSheet.flatten([Mystyle.backgroundColor])}>\r\n      <Header/>\r\n      <Grid container  >\r\n\r\n        <Grid item xs={12} sm={9} md={11} style={StyleSheet.flatten([Mystyle1.containerPos])} >\r\n        <Grid container  >\r\n        <Grid item xs={11} sm={9} md={12} style={StyleSheet.flatten([Mystyle1.chartstyle])}>\r\n        <CardDisplayV\r\ncardData={cardData}\r\nContentHeaderStyles={ContentHeaderStyles}\r\nContentTitleStyles={ContentTitleStyles}\r\nContentIconStyles={ContentIconStyles}\r\nContentDescriptionStyles={ContentDescriptionStyles}/>\r\n      </Grid>\r\n\r\n     </Grid>\r\n      </Grid>\r\n          </Grid>\r\n\r\n      <Grid container  >\r\n        <Grid item xs={12} sm={9} md={1}>\r\n        <Grid item xs={12} sm={9} md={3} >\r\n        <NavbarV/>\r\n        </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} sm={9} md={11} style={StyleSheet.flatten([Mystyle.containerPos])} >\r\n        <Grid container  >\r\n        <Grid item xs={11} sm={9} md={12} style={StyleSheet.flatten([Mystyle.backgroundColor])}>\r\n\r\n        <Cards />\r\n      </Grid>\r\n      <Grid container style={{marginLeft:\"40px\"}}>\r\n\r\n      {getLineChart()}\r\n\r\n      </Grid>\r\n      <Grid item xs={12} sm={9} md={8} >\r\n\r\n      {/* <CardSection2/> */}\r\n      </Grid>\r\n\r\n    <Grid item xs={12} sm={9} md={12}>\r\n     {_getCardSection()}\r\n    </Grid>\r\n\r\n     </Grid>\r\n\r\n      </Grid>\r\n          </Grid>\r\n</View>\r\n\r\n\r\n\r\n  );\r\n}\r\nexport default DashboardV;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}