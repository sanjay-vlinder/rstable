{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"F:\\\\react learn\\\\widgets\\\\rstable\\\\src\\\\TableV.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Icon, Input, InputGroup } from 'rsuite';\nimport 'rsuite/dist/styles/rsuite-default.css';\nimport Avatar from 'rsuite/lib/Avatar';\nimport Button from 'rsuite/lib/Button';\nimport Checkbox from 'rsuite/lib/Checkbox';\nimport Table from 'rsuite/lib/Table';\n\nvar numeral = require('numeral');\n\nvar Cell = Table.Cell,\n    Column = Table.Column,\n    ColumnGroup = Table.ColumnGroup,\n    Pagination = Table.Pagination,\n    HeaderCell = Table.HeaderCell;\n\nvar ids = require('short-id');\n\nfunction deleteKeys(obj, keys) {\n  if (obj && keys && Array.isArray(keys)) {\n    keys.forEach(function (key) {\n      delete obj[key];\n    });\n  }\n}\n\nvar delete_table_keys = ['data', 'sortColumn', 'sortType', 'onSortColumn', 'loading'];\nexport var TableV = function TableV(props) {\n  var _props$table2, _props$pagination, _props$table3, _props$table3$data;\n\n  var _useState = useState({\n    sortColumn: null,\n    sortType: null\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      sortState = _useState2[0],\n      setSortState = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      checkedKeys = _useState6[0],\n      setCheckedKeys = _useState6[1];\n\n  var _useState7 = useState(1),\n      _useState8 = _slicedToArray(_useState7, 2),\n      page = _useState8[0],\n      setPage = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      displayLength = _useState10[0],\n      setDisplayLength = _useState10[1];\n\n  var styles = StyleSheet.create({\n    statusStyle: {\n      alignItems: 'center',\n      display: 'flex',\n      flexDirection: 'row'\n    }\n  });\n  var tableProps = props.table ? _objectSpread({}, props.table) : {};\n  deleteKeys(tableProps, delete_table_keys);\n\n  var onChange = function onChange(value, checked) {\n    console.log('value, checked', value);\n    var nextCheckedKeys = checked ? [].concat(_toConsumableArray(checkedKeys), [value]) : checkedKeys.filter(function (item) {\n      return item !== value;\n    });\n    setCheckedKeys(nextCheckedKeys);\n    props.onSelectRow && props.onSelectRow(nextCheckedKeys);\n  };\n\n  var handleCheckAll = function handleCheckAll(value, checked) {\n    var checkedKeys = checked ? props.rowdata.map(function (item) {\n      return item.id;\n    }) : [];\n    setCheckedKeys(checkedKeys);\n  };\n\n  var onButtonPress = function onButtonPress(rowData) {\n    props.onPress && props.onPress(rowData);\n  };\n\n  var onActionClick = function onActionClick(rowData, itemData) {\n    props.onActionButtonPress && props.onActionButtonPress(rowData, itemData);\n  };\n\n  var getBackgroundColor = function getBackgroundColor(row) {\n    if (props.checkedAppearance) {\n      if (props.evenRowColor && row % 2 === 0) {\n        return {\n          backgroundColor: props.evenRowColor\n        };\n      }\n\n      if (props.oddRowColor && row % 2 !== 0) {\n        return {\n          backgroundColor: props.oddRowColor\n        };\n      }\n    }\n  };\n\n  var CustomCell = function CustomCell(_ref) {\n    var dataKey = _ref.dataKey,\n        rowData = _ref.rowData,\n        column = _ref.column,\n        props = _objectWithoutProperties(_ref, [\"dataKey\", \"rowData\", \"column\"]);\n\n    var _ref2 = column != null ? column : {},\n        appearance = _ref2.appearance,\n        appearanceProps = _ref2.appearanceProps,\n        cellStyle = _ref2.cellStyle;\n\n    if (appearance === 'text') {\n      return React.createElement(Cell, _extends({}, props, {\n        style: StyleSheet.flatten([cellStyle, getBackgroundColor(props.rowIndex)]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, _extends({}, appearanceProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }\n      }), rowData[dataKey]));\n    }\n\n    if (appearance === 'status') {\n      return React.createElement(Cell, _extends({}, props, {\n        style: StyleSheet.flatten([cellStyle, getBackgroundColor(props.rowIndex)]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 9\n        }\n      }), React.createElement(\"span\", {\n        style: StyleSheet.flatten([styles.statusStyle]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }\n      }, React.createElement(Avatar, {\n        style: StyleSheet.flatten([rowData[dataKey].dotStyle]),\n        size: 'xs',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }\n      }), React.createElement(Text, _extends({}, appearanceProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }\n      }), rowData[dataKey])));\n    }\n\n    if (appearance === 'checkbox') {\n      return React.createElement(Cell, _extends({}, props, {\n        style: StyleSheet.flatten([cellStyle, getBackgroundColor(props.rowIndex)]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 9\n        }\n      }), React.createElement(Checkbox, {\n        value: rowData[dataKey],\n        inline: true,\n        onChange: onChange,\n        checked: checkedKeys.some(function (item) {\n          return item === rowData[dataKey];\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    if (appearance === 'action') {\n      return React.createElement(Cell, _extends({}, props, {\n        style: StyleSheet.flatten([cellStyle, getBackgroundColor(props.rowIndex)]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 9\n        }\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }\n      }, Array.isArray(rowData[dataKey]) && rowData[dataKey].map(function (item, index) {\n        if (index === rowData[dataKey].length - 1) {\n          return React.createElement(\"a\", {\n            style: {\n              cursor: 'pointer'\n            },\n            onClick: function onClick() {\n              return onActionClick(rowData, item);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 21\n            }\n          }, item.value);\n        } else {\n          return React.createElement(React.Fragment, null, ' ', React.createElement(\"a\", {\n            style: {\n              cursor: 'pointer'\n            },\n            onClick: function onClick() {\n              return onActionClick(rowData, item);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 23\n            }\n          }, item.value, ' '), ' ', \"|\", ' ');\n        }\n      })));\n    }\n\n    if (appearance === 'avatar') {\n      return React.createElement(Cell, _extends({}, props, {\n        style: StyleSheet.flatten([cellStyle, getBackgroundColor(props.rowIndex)]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 9\n        }\n      }));\n    }\n\n    if (appearance === 'email') {\n      return React.createElement(Cell, _extends({}, props, {\n        style: StyleSheet.flatten([cellStyle, getBackgroundColor(props.rowIndex)]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 9\n        }\n      }), React.createElement(\"a\", {\n        href: \"mailto:\" + rowData[dataKey],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }\n      }, rowData[dataKey]));\n    }\n\n    if (appearance === 'button') {\n      var _rowData$dataKey, _rowData$dataKey2;\n\n      return React.createElement(Cell, _extends({}, props, {\n        style: StyleSheet.flatten([cellStyle, getBackgroundColor(props.rowIndex)]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, _extends({}, appearanceProps, {\n        color: rowData == null ? void 0 : rowData.buttonColor,\n        appearance: appearanceProps.appearance,\n        disabled: (_rowData$dataKey = rowData[dataKey]) == null ? void 0 : _rowData$dataKey.disabled,\n        onClick: function onClick() {\n          return onButtonPress(rowData);\n        },\n        id: rowData[dataKey],\n        leftIcon: appearanceProps.leftIcon,\n        rightIcon: appearanceProps.rightIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }\n      }), (_rowData$dataKey2 = rowData[dataKey]) == null ? void 0 : _rowData$dataKey2.title));\n    }\n\n    return React.createElement(Cell, _extends({}, props, {\n      style: StyleSheet.flatten([cellStyle, getBackgroundColor(props.rowIndex)]),\n      dataKey: dataKey,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 7\n      }\n    }), rowData[dataKey]);\n  };\n\n  var getSummary = function getSummary(summary, format, controlled) {\n    var _res = summary;\n\n    if (summary) {\n      return numeral(summary).format(format);\n    }\n\n    return _res;\n  };\n\n  var CustomHeaderCell = function CustomHeaderCell(_ref3) {\n    var rowData = _ref3.rowData,\n        column = _ref3.column,\n        props = _objectWithoutProperties(_ref3, [\"rowData\", \"column\"]);\n\n    var _ref4 = column != null ? column : {},\n        label = _ref4.label,\n        appearance = _ref4.appearance,\n        headerCellStyle = _ref4.headerCellStyle,\n        summary = _ref4.summary,\n        summaryFormat = _ref4.summaryFormat,\n        summaryControlled = _ref4.summaryControlled,\n        summaryStyle = _ref4.summaryStyle,\n        labelStyle = _ref4.labelStyle;\n\n    return React.createElement(React.Fragment, null, React.createElement(HeaderCell, _extends({}, props, {\n      style: StyleSheet.flatten([headerCellStyle]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }\n    }), React.createElement(Text, {\n      style: StyleSheet.flatten([labelStyle]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 11\n      }\n    }, label), summary && React.createElement(View, {\n      style: StyleSheet.flatten([{\n        flexDirection: 'row'\n      }]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: StyleSheet.flatten([summaryStyle]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 15\n      }\n    }, getSummary(summary, summaryFormat, summaryControlled)))));\n  };\n\n  var renderColumns = function renderColumns(columns) {\n    var _columns = [];\n\n    if (columns && Array.isArray(columns)) {\n      columns.forEach(function (column, index) {\n        _columns.push(React.createElement(Column, _extends({}, column.columnProps, {\n          onResize: props.onResize,\n          key: ids.generate(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 11\n          }\n        }), React.createElement(CustomHeaderCell, {\n          column: column,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 13\n          }\n        }), React.createElement(CustomCell, {\n          column: column,\n          dataKey: column.dataKey,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 13\n          }\n        })));\n      });\n    }\n\n    return _columns;\n  };\n\n  var searchField = function searchField() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 7\n      }\n    }, React.createElement(InputGroup, {\n      style: {\n        width: \"300\",\n        marginBottom: \"10\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 9\n      }\n    }, React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 11\n      }\n    }), React.createElement(InputGroup.Addon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 11\n      }\n    }, React.createElement(Icon, {\n      icon: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 13\n      }\n    }))));\n  };\n\n  var getData = function getData(data, sortColumn, sortType) {\n    var _props$table;\n\n    var pageLenght = (props == null ? void 0 : props.pagination) ? 10 : props == null ? void 0 : (_props$table = props.table) == null ? void 0 : _props$table.data.length;\n    var paeData = data.filter(function (v, i) {\n      var start = pageLenght * (page - 1);\n      var end = start + pageLenght;\n      return i >= start && i < end;\n    });\n\n    if (sortColumn && sortType && paeData && Array.isArray(paeData)) {\n      return paeData.sort(function (a, b) {\n        var x = a[sortColumn];\n        var y = b[sortColumn];\n\n        if (typeof x === 'string') {\n          x = x.charCodeAt(0);\n        }\n\n        if (typeof y === 'string') {\n          y = y.charCodeAt(0);\n        }\n\n        if (sortType === 'asc') {\n          return x - y;\n        } else {\n          return y - x;\n        }\n      });\n    }\n\n    return paeData;\n  };\n\n  var handleSortColumn = function handleSortColumn(sortColumn, sortType) {\n    setLoading(true);\n    setTimeout(function () {\n      setSortState({\n        sortColumn: sortColumn,\n        sortType: sortType\n      });\n      setLoading(false);\n    }, 500);\n  };\n\n  var handleChangePage = function handleChangePage(dataKey) {\n    setPage(dataKey);\n  };\n\n  var handleChangeLength = function handleChangeLength(dataKey) {\n    setPage(1);\n    setDisplayLength(dataKey);\n  };\n\n  return React.createElement(View, {\n    style: StyleSheet.flatten([props.tableContainerStyle]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 5\n    }\n  }, searchField(), React.createElement(Table, _extends({}, tableProps, {\n    data: getData((_props$table2 = props.table) == null ? void 0 : _props$table2.data, sortState.sortColumn, sortState.sortType),\n    sortColumn: sortState.sortColumn,\n    sortType: sortState.sortType,\n    onSortColumn: handleSortColumn,\n    loading: loading,\n    onDataUpdated: props.onDataUpdated,\n    onExpandChange: props.onExpandChange,\n    onRowClick: props.onRowClick,\n    onScroll: props.onScroll,\n    renderEmpty: props.renderEmpty,\n    renderLoading: props.renderLoading,\n    renderRowExpanded: props.renderRowExpanded,\n    renderTreeToggle: props.renderTreeToggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 7\n    }\n  }), renderColumns(props.columns)), (props == null ? void 0 : props.pagination) ? React.createElement(Table.Pagination, {\n    lengthMenu: (_props$pagination = props.pagination) == null ? void 0 : _props$pagination.lengthMenu,\n    activePage: page,\n    displayLength: displayLength,\n    total: (_props$table3 = props.table) == null ? void 0 : (_props$table3$data = _props$table3.data) == null ? void 0 : _props$table3$data.length,\n    onChangePage: handleChangePage,\n    onChangeLength: handleChangeLength,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 9\n    }\n  }) : null);\n};","map":{"version":3,"sources":["F:/react learn/widgets/rstable/src/TableV.tsx"],"names":["React","useState","Icon","Input","InputGroup","Avatar","Button","Checkbox","Table","numeral","require","Cell","Column","ColumnGroup","Pagination","HeaderCell","ids","deleteKeys","obj","keys","Array","isArray","forEach","key","delete_table_keys","TableV","props","sortColumn","sortType","sortState","setSortState","loading","setLoading","checkedKeys","setCheckedKeys","page","setPage","displayLength","setDisplayLength","styles","StyleSheet","create","statusStyle","alignItems","display","flexDirection","tableProps","table","onChange","value","checked","console","log","nextCheckedKeys","filter","item","onSelectRow","handleCheckAll","rowdata","map","id","onButtonPress","rowData","onPress","onActionClick","itemData","onActionButtonPress","getBackgroundColor","row","checkedAppearance","evenRowColor","backgroundColor","oddRowColor","CustomCell","dataKey","column","appearance","appearanceProps","cellStyle","flatten","rowIndex","dotStyle","some","index","length","cursor","buttonColor","disabled","leftIcon","rightIcon","title","getSummary","summary","format","controlled","_res","CustomHeaderCell","label","headerCellStyle","summaryFormat","summaryControlled","summaryStyle","labelStyle","renderColumns","columns","_columns","push","columnProps","onResize","generate","searchField","width","marginBottom","getData","data","pageLenght","pagination","paeData","v","i","start","end","sort","a","b","x","y","charCodeAt","handleSortColumn","setTimeout","handleChangePage","handleChangeLength","tableContainerStyle","onDataUpdated","onExpandChange","onRowClick","onScroll","renderEmpty","renderLoading","renderRowExpanded","renderTreeToggle","lengthMenu"],"mappings":"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","sourcesContent":["//@ts-nocheck\r\nimport React, {ReactNode, useState} from 'react';\r\nimport {StyleSheet, Text, TextStyle, View, ViewStyle} from 'react-native';\r\nimport {Icon, Input, InputGroup} from 'rsuite';\r\nimport 'rsuite/dist/styles/rsuite-default.css';\r\nimport Avatar from 'rsuite/lib/Avatar';\r\nimport Button from 'rsuite/lib/Button';\r\nimport Checkbox from 'rsuite/lib/Checkbox';\r\nimport Table from 'rsuite/lib/Table';\r\nconst numeral = require('numeral');\r\n\r\nconst {Cell, Column, ColumnGroup, Pagination, HeaderCell} = Table;\r\n\r\nvar ids = require('short-id');\r\n\r\nfunction deleteKeys(obj: any, keys: string[]) {\r\n  if (obj && keys && Array.isArray(keys)) {\r\n    keys.forEach((key: string) => {\r\n      delete obj[key];\r\n    });\r\n\r\n  }\r\n}\r\n\r\n\r\n// function renameKeys(obj: any, newKeys: any, delete_keys?: string[]) {\r\n//   const keyValues = Object.keys(obj).map(key => {\r\n//     const newKey = newKeys[key] || key;\r\n//     return {[newKey]: obj[key]};\r\n//   });\r\n//   const ret = Object.assign({}, ...keyValues);\r\n//   delete_keys && deleteKeys(ret, delete_keys);\r\n//   return ret;\r\n// }\r\n\r\ntype TableProps = {\r\n  affixHeader?: boolean | number;\r\n  affixHorizontalScrollbar?: boolean | number;\r\n  autoHeight?: boolean;\r\n  bodyRef?: any;\r\n  bordered?: boolean;\r\n  cellBordered?: boolean;\r\n  data: any[];\r\n  defaultExpandAllRows?: boolean;\r\n  defaultExpandedRowKeys?: string[];\r\n  defaultSortType?: 'desc' | 'asc';\r\n  expandedRowKeys?: string[];\r\n  headerHeight?: number;\r\n  height?: number;\r\n  hover?: boolean;\r\n  isTree?: boolean;\r\n  loading?: boolean;\r\n  minHeight?: number;\r\n  rowClassName?: string | any;\r\n  rowHeight?: number;\r\n  rowExpandedHeight?: number;\r\n  rowKey?: string;\r\n  shouldUpdateScroll?: boolean;\r\n  showHeader?: boolean;\r\n  sortColumn?: string;\r\n  sortType?: 'desc' | 'asc';\r\n  virtualized?: boolean;\r\n  width?: number;\r\n  wordWrap?: boolean;\r\n};\r\n\r\ntype TableColumnProps = {\r\n  align?: 'left' | 'center' | 'right';\r\n  colSpan?: number;\r\n  fixed?: boolean | 'left' | 'right';\r\n  flexGrow?: number;\r\n  minWidth?: number;\r\n  resizable?: boolean;\r\n  sortable?: boolean;\r\n  treeCol?: boolean;\r\n  verticalAlign?: 'top' | 'middle' | 'bottom';\r\n  width?: number;\r\n};\r\n\r\ntype TableColumnGroupProps = {\r\n  align?: 'left' | 'center' | 'right';\r\n  fixed?: 'left' | 'right';\r\n  verticalAlign?: 'top' | 'middle' | 'bottom';\r\n  header?: ReactNode;\r\n};\r\n\r\ntype TableCellProps = {\r\n  dataKey?: string;\r\n  rowData?: object;\r\n  rowIndex?: number;\r\n};\r\n\r\ntype TablePaginationProps = {\r\n  activePage?: number;\r\n  disabled?: boolean | any;\r\n  displayLength?: number;\r\n  first?: boolean;\r\n  last?: boolean;\r\n  lengthMenu?: any;\r\n  maxButtons?: number;\r\n  next?: boolean;\r\n  prev?: boolean;\r\n  reverse?: boolean;\r\n  showInfo?: boolean;\r\n  showLengthMenu?: boolean;\r\n  total?: number;\r\n};\r\n\r\nexport type TableHeaderDataProps = {\r\n  label: string;\r\n  dataKey: string;\r\n  appearance?:\r\n    | 'text'\r\n    | 'avatar'\r\n    | 'icon'\r\n    | 'pop-over'\r\n    | 'email'\r\n    | 'edit'\r\n    | 'button'\r\n    | 'checkbox'\r\n    | 'action'\r\n    | 'status';\r\n  appearanceProps?: any;\r\n  summary?: number | string;\r\n  summaryFormat?: any; //supports all formats from http://numeraljs.com/\r\n  summaryControlled?: 'sum' | 'average' | 'percentage'; //TO BE IMPLEMENTED\r\n  summaryStyle?: TextStyle;\r\n  columnProps?: TableColumnProps;\r\n  cellStyle?: any;\r\n  headerCellStyle?: any;\r\n  labelStyle?: TextStyle;\r\n};\r\n\r\nexport type WidgetProps = {\r\n  table: TableProps;\r\n  columns?: TableHeaderDataProps[];\r\n  columnGroup?: TableColumnGroupProps;\r\n  cell?: TableCellProps;\r\n  checkedAppearance?: boolean;\r\n  oddRowColor?: string;\r\n  evenRowColor?: string;\r\n  pagination?: TablePaginationProps;\r\n  tableContainerStyle?: ViewStyle;\r\n  onDataUpdated?(\r\n    nextData: object[],\r\n    scrollTo: (coord: {x: number; y: number}) => void,\r\n  ): void;\r\n  onExpandChange?(expanded: boolean, rowData: object): void;\r\n  onRowClick?(rowData: object): void;\r\n  onScroll?(scrollX: object, scrollY: object): void;\r\n  onSortColumn?(dataKey: string, sortType: string): void;\r\n  renderEmpty?(info: ReactNode): ReactNode;\r\n  renderLoading?(loading: ReactNode): ReactNode;\r\n  renderRowExpanded?(rowDate?: Object): ReactNode;\r\n  renderTreeToggle?(icon: any, rowData: object, expanded: boolean): any;\r\n  rowHeight?(rowData: object): any;\r\n  onResize?(columnWidth?: number, dataKey?: string): void;\r\n  onChangeLength?(eventKey: number): void;\r\n  onChangePage?(eventKey: number): void;\r\n  onSelectRow?(checkedKeys: any): void;\r\n  renderLengthMenu?(picker: ReactNode): ReactNode;\r\n  renderTotal?(total: number, activePage: number): ReactNode;\r\n  onPress?(eventKey: string): void;\r\n  onActionButtonPress?(rowData: any, itemData: any);\r\n};\r\n\r\nconst delete_table_keys = [\r\n  'data',\r\n  'sortColumn',\r\n  'sortType',\r\n  'onSortColumn',\r\n  'loading',\r\n];\r\n\r\n export const TableV = (props: WidgetProps) => {\r\n  const [sortState, setSortState] = useState<any>({\r\n    sortColumn: null,\r\n    sortType: null,\r\n  });\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [checkedKeys, setCheckedKeys] = useState([]);\r\n  const [page, setPage] = useState<number>(1);\r\n  const [displayLength, setDisplayLength] = useState<number>();\r\n\r\n  const styles = StyleSheet.create({\r\n    statusStyle: {\r\n      alignItems: 'center',\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n    },\r\n  });\r\n\r\n  const tableProps = props.table ? {...props.table} : {};\r\n  deleteKeys(tableProps, delete_table_keys);\r\n\r\n  const onChange = (value, checked) => {\r\n    console.log('value, checked', value);\r\n    const nextCheckedKeys = checked\r\n      ? [...checkedKeys, value]\r\n      : checkedKeys.filter(item => item !== value);\r\n    setCheckedKeys(nextCheckedKeys);\r\n    props.onSelectRow && props.onSelectRow(nextCheckedKeys);\r\n  };\r\n\r\n  const handleCheckAll = (value, checked) => {\r\n    const checkedKeys = checked ? props.rowdata.map(item => item.id) : [];\r\n    setCheckedKeys(checkedKeys);\r\n  };\r\n\r\n  const onButtonPress = (rowData: any) => {\r\n    props.onPress && props.onPress(rowData);\r\n  };\r\n  const onActionClick = (rowData: any, itemData: any) => {\r\n    props.onActionButtonPress && props.onActionButtonPress(rowData, itemData);\r\n  };\r\n\r\n  const getBackgroundColor = (row: number) => {\r\n    if (props.checkedAppearance) {\r\n      if (props.evenRowColor && row % 2 === 0) {\r\n        return {\r\n          backgroundColor: props.evenRowColor,\r\n        };\r\n      }\r\n      if (props.oddRowColor && row % 2 !== 0) {\r\n        return {\r\n          backgroundColor: props.oddRowColor,\r\n        };\r\n      }\r\n    }\r\n  };\r\n\r\n  const CustomCell = ({dataKey, rowData, column, ...props}: any) => {\r\n    const {appearance, appearanceProps, cellStyle} = column ?? {};\r\n    if (appearance === 'text') {\r\n      return (\r\n        <Cell\r\n          {...props}\r\n          style={StyleSheet.flatten([\r\n            cellStyle,\r\n            getBackgroundColor(props.rowIndex),\r\n          ])}\r\n        >\r\n          <Text {...appearanceProps}>{rowData[dataKey]}</Text>\r\n        </Cell>\r\n      );\r\n    }\r\n    if (appearance === 'status') {\r\n      return (\r\n        <Cell\r\n          {...props}\r\n          style={StyleSheet.flatten([\r\n            cellStyle,\r\n            getBackgroundColor(props.rowIndex),\r\n          ])}\r\n        >\r\n          <span style={StyleSheet.flatten([styles.statusStyle])}>\r\n            <Avatar\r\n              style={StyleSheet.flatten([rowData[dataKey].dotStyle])}\r\n              size={'xs'}\r\n            />\r\n            <Text {...appearanceProps}>{rowData[dataKey]}</Text>\r\n          </span>\r\n        </Cell>\r\n      );\r\n    }\r\n    if (appearance === 'checkbox') {\r\n      return (\r\n        <Cell\r\n          {...props}\r\n          style={StyleSheet.flatten([\r\n            cellStyle,\r\n            getBackgroundColor(props.rowIndex),\r\n          ])}\r\n        >\r\n          <Checkbox\r\n            value={rowData[dataKey]}\r\n            inline\r\n            onChange={onChange}\r\n            checked={checkedKeys.some(item => item === rowData[dataKey])}\r\n          />\r\n        </Cell>\r\n      );\r\n    }\r\n\r\n    if (appearance === 'action') {\r\n      return (\r\n        <Cell\r\n          {...props}\r\n          style={StyleSheet.flatten([\r\n            cellStyle,\r\n            getBackgroundColor(props.rowIndex),\r\n          ])}\r\n        >\r\n          <span>\r\n            {Array.isArray(rowData[dataKey]) &&\r\n              rowData[dataKey].map((item, index) => {\r\n                if (index === rowData[dataKey].length - 1) {\r\n                  return (\r\n                    <a\r\n                      style={{cursor: 'pointer'}}\r\n                      onClick={() => onActionClick(rowData, item)}\r\n                    >\r\n                      {item.value}\r\n                    </a>\r\n                  );\r\n                } else {\r\n                  return (\r\n                    <>\r\n                      {' '}\r\n                      <a\r\n                        style={{cursor: 'pointer'}}\r\n                        onClick={() => onActionClick(rowData, item)}\r\n                      >\r\n                        {item.value}{' '}\r\n                      </a>{' '}\r\n                      |{' '}\r\n                    </>\r\n                  );\r\n                }\r\n              })}\r\n          </span>\r\n        </Cell>\r\n      );\r\n    }\r\n    if (appearance === 'avatar') {\r\n      return (\r\n        <Cell\r\n          {...props}\r\n          style={StyleSheet.flatten([\r\n            cellStyle,\r\n            getBackgroundColor(props.rowIndex),\r\n          ])}\r\n        >\r\n          {/* <AvatarV\r\n            {...appearanceProps}\r\n            rounded={appearanceProps?.rounded ?? true}\r\n            source={{uri: rowData[dataKey]}}\r\n            avatarStyle={StyleSheet.flatten([appearanceProps?.avatarStyle])}\r\n            containerStyle={StyleSheet.flatten([\r\n              appearanceProps?.containerStyle,\r\n            ])}\r\n          /> */}\r\n        </Cell>\r\n      );\r\n    }\r\n    if (appearance === 'email') {\r\n      return (\r\n        <Cell\r\n          {...props}\r\n          style={StyleSheet.flatten([\r\n            cellStyle,\r\n            getBackgroundColor(props.rowIndex),\r\n          ])}\r\n        >\r\n          <a href={`mailto:${rowData[dataKey]}`}>{rowData[dataKey]}</a>\r\n        </Cell>\r\n      );\r\n    }\r\n    if (appearance === 'button') {\r\n      return (\r\n        <Cell\r\n          {...props}\r\n          style={StyleSheet.flatten([\r\n            cellStyle,\r\n            getBackgroundColor(props.rowIndex),\r\n          ])}\r\n        >\r\n          <Button\r\n            {...appearanceProps}\r\n            color={rowData?.buttonColor}\r\n            appearance={appearanceProps.appearance}\r\n            disabled={rowData[dataKey]?.disabled}\r\n            onClick={() => onButtonPress(rowData)}\r\n            id={rowData[dataKey]}\r\n            leftIcon={appearanceProps.leftIcon}\r\n            rightIcon={appearanceProps.rightIcon}\r\n          >\r\n            {rowData[dataKey]?.title}\r\n          </Button>\r\n        </Cell>\r\n      );\r\n    }\r\n    return (\r\n      <Cell\r\n        {...props}\r\n        style={StyleSheet.flatten([\r\n          cellStyle,\r\n          getBackgroundColor(props.rowIndex),\r\n        ])}\r\n        dataKey={dataKey}\r\n      >\r\n        {rowData[dataKey]}\r\n      </Cell>\r\n    );\r\n  };\r\n\r\n  const getSummary = (\r\n    summary?: number | string,\r\n    format?: any,\r\n    controlled?: 'sum' | 'average' | 'percentage',\r\n  ) => {\r\n    let _res = summary;\r\n    if (summary) {\r\n      return numeral(summary).format(format);\r\n    }\r\n    return _res;\r\n  };\r\n\r\n  const CustomHeaderCell = ({rowData, column, ...props}: any) => {\r\n    const {\r\n      label,\r\n      appearance,\r\n      headerCellStyle,\r\n      summary,\r\n      summaryFormat,\r\n      summaryControlled,\r\n      summaryStyle,\r\n      labelStyle,\r\n    } = column ?? {};\r\n\r\n    // let checked = false;\r\n    // let indeterminate = false;\r\n    // if (checkedKeys.length === rowData.length) {\r\n    //   checked = true;\r\n    // } else if (checkedKeys.length === 0) {\r\n    //   checked = false;\r\n    // } else if (checkedKeys.length > 0 && checkedKeys.length < rowData.length) {\r\n    //   indeterminate = true;\r\n    // }\r\n\r\n    // if (appearance === 'checkbox') {\r\n    //   return (\r\n    //     <HeaderCell {...props} style={StyleSheet.flatten([headerCellStyle])}>\r\n    //       <Checkbox\r\n    //         inline\r\n    //         checked={checked}\r\n    //         indeterminate={indeterminate}\r\n    //         onChange={handleCheckAll}\r\n    //       />\r\n    //     </HeaderCell>\r\n    //   );\r\n    // }\r\n    // else {\r\n    return (\r\n      <>\r\n        <HeaderCell {...props} style={StyleSheet.flatten([headerCellStyle])}>\r\n          <Text style={StyleSheet.flatten([labelStyle])}>{label}</Text>\r\n          {summary && (\r\n            <View style={StyleSheet.flatten([{flexDirection: 'row'}])}>\r\n              <Text style={StyleSheet.flatten([summaryStyle])}>\r\n                {getSummary(summary, summaryFormat, summaryControlled)}\r\n              </Text>\r\n            </View>\r\n          )}\r\n        </HeaderCell>\r\n      </>\r\n    );\r\n    // }\r\n  };\r\n\r\n  const renderColumns = (columns?: TableHeaderDataProps[]) => {\r\n    let _columns: any = [];\r\n    if (columns && Array.isArray(columns)) {\r\n      columns.forEach((column, index) => {\r\n        _columns.push(\r\n          <Column\r\n            {...column.columnProps}\r\n            onResize={props.onResize}\r\n            key={ids.generate()}\r\n          >\r\n            <CustomHeaderCell column={column} />\r\n            <CustomCell column={column} dataKey={column.dataKey} />\r\n\r\n          </Column>,\r\n        );\r\n      });\r\n    }\r\n    return _columns;\r\n  };\r\n\r\n  const searchField = ()=> {\r\n    return (\r\n      <div>\r\n        <InputGroup style={{width: \"300\",marginBottom: \"10\"}} >\r\n          <Input />\r\n          <InputGroup.Addon>\r\n            <Icon icon=\"search\" />\r\n          </InputGroup.Addon>\r\n        </InputGroup>\r\n      </div>\r\n    )\r\n  }\r\n  const getData = (data: any[], sortColumn: any, sortType: 'asc' | 'desc') => {\r\n    let pageLenght: number = props?.pagination ? 10 : props?.table?.data.length;\r\n    const paeData = data.filter((v, i) => {\r\n      const start = pageLenght * (page - 1);\r\n      const end = start + pageLenght;\r\n      return i >= start && i < end;\r\n    });\r\n\r\n    if (sortColumn && sortType && paeData && Array.isArray(paeData)) {\r\n      return paeData.sort((a, b) => {\r\n        let x = a[sortColumn];\r\n        let y = b[sortColumn];\r\n        if (typeof x === 'string') {\r\n          x = x.charCodeAt(0);\r\n        }\r\n        if (typeof y === 'string') {\r\n          y = y.charCodeAt(0);\r\n        }\r\n        if (sortType === 'asc') {\r\n          return x - y;\r\n        } else {\r\n          return y - x;\r\n        }\r\n      });\r\n    }\r\n    //data && Array.isArray(data) && setData([...data]);\r\n    return paeData;\r\n  };\r\n  const handleSortColumn = (sortColumn: string, sortType: 'asc' | 'desc') => {\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      setSortState({\r\n        sortColumn: sortColumn,\r\n        sortType: sortType,\r\n      });\r\n      setLoading(false);\r\n    }, 500);\r\n  };\r\n  const handleChangePage = dataKey => {\r\n    setPage(dataKey);\r\n  };\r\n  const handleChangeLength = dataKey => {\r\n    setPage(1);\r\n    setDisplayLength(dataKey);\r\n  };\r\n  return (\r\n    <View style={StyleSheet.flatten([props.tableContainerStyle])}>\r\n      {searchField()}\r\n      <Table\r\n        {...tableProps}\r\n        data={getData(\r\n          props.table?.data,\r\n          sortState.sortColumn,\r\n          sortState.sortType,\r\n        )}\r\n        sortColumn={sortState.sortColumn}\r\n        sortType={sortState.sortType}\r\n        onSortColumn={handleSortColumn}\r\n        loading={loading}\r\n        onDataUpdated={props.onDataUpdated}\r\n        onExpandChange={props.onExpandChange}\r\n        onRowClick={props.onRowClick}\r\n        onScroll={props.onScroll}\r\n        renderEmpty={props.renderEmpty}\r\n        renderLoading={props.renderLoading}\r\n        renderRowExpanded={props.renderRowExpanded}\r\n        renderTreeToggle={props.renderTreeToggle}\r\n      >\r\n        {renderColumns(props.columns)}\r\n      </Table>\r\n      {props?.pagination ? (\r\n        <Table.Pagination\r\n          lengthMenu={props.pagination?.lengthMenu}\r\n          activePage={page}\r\n          displayLength={displayLength}\r\n          total={props.table?.data?.length}\r\n          onChangePage={handleChangePage}\r\n          onChangeLength={handleChangeLength}\r\n        />\r\n      ) : null}\r\n    </View>\r\n  );\r\n};\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}