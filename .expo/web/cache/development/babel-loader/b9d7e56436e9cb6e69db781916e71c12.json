{"ast":null,"code":"var _jsxFileName = \"F:\\\\vlinder\\\\neo_dashboard\\\\src\\\\DashboardV.tsx\";\nimport Grid from '@material-ui/core/Grid';\nimport React from 'react';\nimport CardSection3 from \"./components/card_section3\";\nimport LineChartV from \"./components/LineChart\";\nimport SmallCardLayout from \"./components/SmallCardLayout\";\nimport TimeLineV from \"./components/timelineV\";\nvar Mystyle = {\n  backgroundColor: {\n    backgroundColor: '#eee'\n  },\n  chartstyle: {\n    backgroundColor: 'white',\n    marginLeft: '65px',\n    borderRadius: '5px',\n    padding: '10px'\n  },\n  timeline: {\n    borderRadius: '5px'\n  },\n  containerPos: {\n    marginLeft: \"-45px\"\n  }\n};\n\nvar DashboardV = function DashboardV(props) {\n  var _getSmallCard = function _getSmallCard() {\n    var smallOutput = [];\n    Array.isArray(props == null ? void 0 : props.graphData) && (props == null ? void 0 : props.graphData.forEach(function (items) {\n      smallOutput.push(React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, React.createElement(Grid, {\n        item: true,\n        md: items == null ? void 0 : items.smallcardlayout.md,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }, React.createElement(SmallCardLayout, {\n        tinyBarChartData: items == null ? void 0 : items.smallcardlayout.tinybarchart,\n        tinyLineChartData: items == null ? void 0 : items.smallcardlayout.tinylinechart,\n        tinyAreaChartData: items == null ? void 0 : items.smallcardlayout.tinyareachart,\n        AnglePieData: items == null ? void 0 : items.smallcardlayout.anglepie,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }))));\n    }));\n    return smallOutput;\n  };\n\n  var getLineChart = function getLineChart() {\n    var output = [];\n    Array.isArray(props == null ? void 0 : props.graphData) && (props == null ? void 0 : props.graphData.forEach(function (items) {\n      output.push(React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, React.createElement(Grid, {\n        item: true,\n        md: items == null ? void 0 : items.timelinedata.md,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }, React.createElement(TimeLineV, {\n        timelinedata: items == null ? void 0 : items.timelinedata.dataset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      })), React.createElement(Grid, {\n        item: true,\n        md: items == null ? void 0 : items.lineChartData.md,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }\n      }, React.createElement(LineChartV, {\n        lineChartData: items == null ? void 0 : items.lineChartData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }\n      }))));\n    }));\n    return output;\n  };\n\n  var _getCardSection3 = function _getCardSection3() {\n    var cardsec3output = [];\n    Array.isArray(props == null ? void 0 : props.graphData) && (props == null ? void 0 : props.graphData.forEach(function (items) {\n      cardsec3output.push(React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 9,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 1\n        }\n      }, React.createElement(CardSection3, {\n        RadarData: items == null ? void 0 : items.radardata,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 8\n        }\n      }), \"hi\")));\n    }));\n    return cardsec3output;\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, _getSmallCard(), getLineChart(), _getCardSection3());\n};\n\nexport default DashboardV;","map":{"version":3,"sources":["F:/vlinder/neo_dashboard/src/DashboardV.tsx"],"names":["Grid","React","CardSection3","LineChartV","SmallCardLayout","TimeLineV","Mystyle","backgroundColor","chartstyle","marginLeft","borderRadius","padding","timeline","containerPos","DashboardV","props","_getSmallCard","smallOutput","Array","isArray","graphData","forEach","items","push","smallcardlayout","md","tinybarchart","tinylinechart","tinyareachart","anglepie","getLineChart","output","timelinedata","dataset","lineChartData","_getCardSection3","cardsec3output","radardata"],"mappings":"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","sourcesContent":["import Grid from '@material-ui/core/Grid';\r\nimport React from 'react';\r\nimport CardSection3 from './components/card_section3';\r\n// import Header from './components/headerV';\r\nimport LineChartV from './components/LineChart';\r\n// import NavbarV from './components/Navbar';\r\nimport SmallCardLayout from './components/SmallCardLayout';\r\nimport TimeLineV from './components/timelineV';\r\n\r\n\r\n\r\n\r\nexport type dashBoardProps= {\r\n  graphData:any;\r\n  // tinyLineChartData:any;\r\n\r\n  // tinyBarChartData:any;\r\n  // tinyAreaChartData:any;\r\n  // AnglePieData:any;\r\n  // RadarData:any;\r\n  // PieDonutChartData:any;\r\n  // BarChartData:any;\r\n  // timelinedata:any;\r\n\r\n}\r\n\r\n\r\nconst Mystyle={\r\n  backgroundColor:{\r\n    backgroundColor:'#eee'\r\n  },\r\n  chartstyle:{\r\n    backgroundColor:'white',\r\n\r\n    marginLeft:'65px',\r\n    borderRadius:'5px',\r\n    padding:'10px',\r\n\r\n  },\r\n  timeline :{\r\n    borderRadius:'5px'\r\n  },\r\n  containerPos:{\r\n    marginLeft:\"-45px\"\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst  DashboardV=(props: dashBoardProps)=> {\r\n  const _getSmallCard= ()=> {\r\n    const smallOutput:any =[];\r\n    Array.isArray(props?.graphData) && props?.graphData.forEach(items=>{\r\n      smallOutput.push(\r\n        <Grid container>\r\n\r\n          <Grid item md={items?.smallcardlayout.md}>\r\n          <SmallCardLayout\r\n\r\n             tinyBarChartData={items?.smallcardlayout.tinybarchart}\r\n             tinyLineChartData={items?.smallcardlayout.tinylinechart}\r\n               tinyAreaChartData={items?.smallcardlayout.tinyareachart}\r\n                AnglePieData={items?.smallcardlayout.anglepie}\r\n        />\r\n          </Grid>\r\n\r\n                </Grid>\r\n      )\r\n    });\r\n    return smallOutput;\r\n\r\n  }\r\n\r\n    const getLineChart = () =>{\r\n      const output: any =[];\r\n      Array.isArray(props?.graphData) && props?.graphData.forEach(items=>{\r\n        output.push(\r\n          <Grid container>\r\n\r\n          <Grid item md={items?.timelinedata.md}>\r\n            <TimeLineV\r\n                timelinedata={items?.timelinedata.dataset} />\r\n          </Grid>\r\n            <Grid item md={items?.lineChartData.md}>\r\n              <LineChartV\r\n                lineChartData={items?.lineChartData} />\r\n            </Grid>\r\n                </Grid>\r\n\r\n\r\n        )\r\n      });\r\n      return output;\r\n    }\r\n\r\n    const _getCardSection3= ()=> {\r\n      const cardsec3output:any =[];\r\n      Array.isArray(props?.graphData) && props?.graphData.forEach(items=>{\r\n        cardsec3output.push(\r\n          <Grid container>\r\n\r\n<Grid item xs={12} sm={9} md={12}>\r\n       <CardSection3\r\n      RadarData={items?.radardata}\r\n      // PieDonutChartData={props?.PieDonutChartData}\r\n      // BarChartData={props?.BarChartData}\r\n      />\r\n      hi\r\n    </Grid>\r\n\r\n                  </Grid>\r\n        )\r\n      });\r\n      return cardsec3output;\r\n\r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n      {_getSmallCard()}\r\n      {getLineChart()}\r\n      {_getCardSection3()}\r\n\r\n    </div>\r\n//     <View style={StyleSheet.flatten([Mystyle.backgroundColor])}>\r\n//       <Header/>\r\n\r\n//       <Grid container  >\r\n//         <Grid item xs={12} sm={9} md={1}>\r\n//         <Grid item xs={12} sm={9} md={3} >\r\n//         <NavbarV/>\r\n//         </Grid>\r\n//         </Grid>\r\n//         <Grid item xs={12} sm={9} md={11} style={StyleSheet.flatten([Mystyle.containerPos])} >\r\n//         <Grid container  >\r\n//         <Grid item xs={11} sm={9} md={12} style={StyleSheet.flatten([Mystyle.backgroundColor])}>\r\n//         <SmallCardLayout\r\n//         tinyLineChartData={props?.tinyLineChartData}\r\n//         // tinyBarChartData={props?.tinyBarChartData}\r\n//         // tinyAreaChartData={props?.tinyAreaChartData}\r\n//         // AnglePieData={props?.AnglePieData}\r\n//         />\r\n//       </Grid>\r\n//       <Grid container style={{marginLeft:\"40px\"}}>\r\n//       <Grid  item xs={11} sm={9} md={3} style={StyleSheet.flatten([Mystyle.timeline])}>\r\n//       <TimeLineV\r\n//      // timelinedata={props?.timelinedata}\r\n\r\n//     />\r\n\r\n//       </Grid>\r\n//         <Grid item xs={11} sm={9} md={8} style={StyleSheet.flatten([Mystyle.chartstyle])}>\r\n//       <LineChartV\r\n//       lineChartData={props?.lineChartData}\r\n//       />\r\n//       </Grid>\r\n//       </Grid>\r\n//       <Grid item xs={12} sm={9} md={8} >\r\n\r\n//       <CardSection2/>\r\n//       </Grid>\r\n\r\n//     <Grid item xs={12} sm={9} md={12}>\r\n//       <CardSection3\r\n//       // RadarData={props?.RadarData}\r\n//       // PieDonutChartData={props?.PieDonutChartData}\r\n//       // BarChartData={props?.BarChartData}\r\n//       />\r\n//     </Grid>\r\n\r\n//      </Grid>\r\n\r\n//       </Grid>\r\n//           </Grid>\r\n// </View>\r\n\r\n\r\n\r\n  );\r\n}\r\nexport default DashboardV;\r\n"]},"metadata":{},"sourceType":"module"}