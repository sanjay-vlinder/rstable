{"ast":null,"code":"var _jsxFileName = \"F:\\\\vlinder\\\\neo_dashboard\\\\src\\\\components\\\\timelineV.tsx\";\nimport React, { Fragment } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Timeline } from 'rsuite';\nimport 'rsuite/dist/styles/rsuite-default.css';\nvar useStyle = {\n  customTimelineStyles: {\n    backgroundColor: \"white\",\n    borderRadius: \"5px\"\n  },\n  contentStyles: {\n    wordWrap: 'break-word'\n  },\n  titleStyle: {\n    fontSize: \"15px\",\n    fontWeight: 'bolder'\n  }\n};\n\nvar TimeLineV = function TimeLineV(props) {\n  var timelinedata = props.timelinedata;\n  var output = [];\n\n  var getTimeline = function getTimeline() {\n    Array.isArray(timelinedata) && timelinedata.forEach(function (items) {\n      output.push(React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }, React.createElement(Timeline.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }, React.createElement(\"div\", {\n        style: StyleSheet.flatten([useStyle.contentStyles]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }\n      }, React.createElement(\"p\", {\n        style: StyleSheet.flatten([useStyle.titleStyle]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }, items.date), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, items.status)))));\n    });\n    return output;\n  };\n\n  return React.createElement(Timeline, {\n    style: StyleSheet.flatten([useStyle.customTimelineStyles]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, getTimeline());\n};\n\nexport default TimeLineV;","map":{"version":3,"sources":["F:/vlinder/neo_dashboard/src/components/timelineV.tsx"],"names":["React","Fragment","Timeline","useStyle","customTimelineStyles","backgroundColor","borderRadius","contentStyles","wordWrap","titleStyle","fontSize","fontWeight","TimeLineV","props","timelinedata","output","getTimeline","Array","isArray","forEach","items","push","StyleSheet","flatten","date","status"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,SAAQC,QAAR,QAAuB,QAAvB;AACA,OAAO,uCAAP;AAIA,IAAMC,QAAa,GAAG;AAEpBC,EAAAA,oBAAoB,EAAG;AACrBC,IAAAA,eAAe,EAAC,OADK;AAErBC,IAAAA,YAAY,EAAC;AAFQ,GAFH;AAOpBC,EAAAA,aAAa,EAAG;AACdC,IAAAA,QAAQ,EAAE;AADI,GAPI;AAYpBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,QAAQ,EAAC,MADC;AAEVC,IAAAA,UAAU,EAAE;AAFF;AAZQ,CAAtB;;AA6BA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAA2B;AAAA,MAEzCC,YAFyC,GAIvCD,KAJuC,CAEzCC,YAFyC;AAK3C,MAAMC,MAAW,GAAG,EAApB;;AACA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBC,IAAAA,KAAK,CAACC,OAAN,CAAcJ,YAAd,KACEA,YAAY,CAACK,OAAb,CAAqB,UAAAC,KAAK,EAAI;AAC5BL,MAAAA,MAAM,CAACM,IAAP,CACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD,CAAU,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAK,QAAA,KAAK,EAAEC,UAAU,CAACC,OAAX,CAAmB,CAACpB,QAAQ,CAACI,aAAV,CAAnB,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,KAAK,EAAEe,UAAU,CAACC,OAAX,CAAmB,CAACpB,QAAQ,CAACM,UAAV,CAAnB,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsDW,KAAK,CAACI,IAA5D,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGJ,KAAK,CAACK,MADT,CAFF,CAFF,CADF,CADF;AAaD,KAdD,CADF;AAgBA,WAAOV,MAAP;AACD,GAlBD;;AAmBA,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEO,UAAU,CAACC,OAAX,CAAmB,CAACpB,QAAQ,CAACC,oBAAV,CAAnB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGY,WAAW,EADd,CADF;AAKD,CA9BD;;AA+BA,eAAeJ,SAAf","sourcesContent":["import React, {Fragment} from 'react';\r\nimport {StyleSheet} from 'react-native';\r\nimport {Timeline} from 'rsuite';\r\nimport 'rsuite/dist/styles/rsuite-default.css';\r\n\r\n//#4F84C4\"\r\n\r\nconst useStyle: any = {\r\n\r\n  customTimelineStyles : {\r\n    backgroundColor:\"white\",\r\n    borderRadius:\"5px\",\r\n\r\n  },\r\n  contentStyles : {\r\n    wordWrap: 'break-word',\r\n\r\n  },\r\n\r\n  titleStyle :{\r\n    fontSize:\"15px\",\r\n    fontWeight: 'bolder',\r\n\r\n  },\r\n\r\n};\r\n\r\n\r\nexport type TimeLineVProps = {\r\n  timelinedata?: any;\r\n  customTimelineStyles?: any;\r\n  contentStyles?: any;\r\n  iconsStyles?: any;\r\n  titleStyle?: any;\r\n  subTitleStyle?: any;\r\n};\r\nconst TimeLineV = (props: TimeLineVProps) => {\r\n  const {\r\n    timelinedata,\r\n\r\n  } = props;\r\n  const output: any = [];\r\n  const getTimeline = () => {\r\n    Array.isArray(timelinedata) &&\r\n      timelinedata.forEach(items => {\r\n        output.push(\r\n          <Fragment>\r\n            <Timeline.Item>\r\n\r\n              <div style={StyleSheet.flatten([useStyle.contentStyles])}>\r\n                <p style={StyleSheet.flatten([useStyle.titleStyle])}>{items.date}</p>\r\n                <p >\r\n                  {items.status}\r\n                </p>\r\n              </div>\r\n            </Timeline.Item>\r\n          </Fragment>,\r\n        );\r\n      });\r\n    return output;\r\n  };\r\n  return (\r\n    <Timeline style={StyleSheet.flatten([useStyle.customTimelineStyles])}>\r\n      {getTimeline()}\r\n    </Timeline>\r\n  );\r\n};\r\nexport default TimeLineV;\r\n"]},"metadata":{},"sourceType":"module"}